{"ast":null,"code":"import _classCallCheck from \"/media/deepak/3E62AF4662AF01AF/kabloom_docs/stuffs/mongo/favourite-movie-directory-8p8dgkn4s8n/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/media/deepak/3E62AF4662AF01AF/kabloom_docs/stuffs/mongo/favourite-movie-directory-8p8dgkn4s8n/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/deepak/3E62AF4662AF01AF/kabloom_docs/stuffs/mongo/favourite-movie-directory-8p8dgkn4s8n/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/deepak/3E62AF4662AF01AF/kabloom_docs/stuffs/mongo/favourite-movie-directory-8p8dgkn4s8n/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _wrapNativeSuper from \"/media/deepak/3E62AF4662AF01AF/kabloom_docs/stuffs/mongo/favourite-movie-directory-8p8dgkn4s8n/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\n\nfunction fuzzyMatches(textToMatch, node, matcher) {\n  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref$collapseWhitespa = _ref.collapseWhitespace,\n      collapseWhitespace = _ref$collapseWhitespa === undefined ? true : _ref$collapseWhitespa,\n      _ref$trim = _ref.trim,\n      trim = _ref$trim === undefined ? true : _ref$trim;\n\n  if (typeof textToMatch !== 'string') {\n    return false;\n  }\n\n  var normalizedText = normalize(textToMatch, {\n    trim: trim,\n    collapseWhitespace: collapseWhitespace\n  });\n\n  if (typeof matcher === 'string') {\n    return normalizedText.toLowerCase().includes(matcher.toLowerCase());\n  } else if (typeof matcher === 'function') {\n    return matcher(normalizedText, node);\n  } else {\n    return matcher.test(normalizedText);\n  }\n}\n\nfunction matches(textToMatch, node, matcher) {\n  var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref2$collapseWhitesp = _ref2.collapseWhitespace,\n      collapseWhitespace = _ref2$collapseWhitesp === undefined ? true : _ref2$collapseWhitesp,\n      _ref2$trim = _ref2.trim,\n      trim = _ref2$trim === undefined ? true : _ref2$trim;\n\n  if (typeof textToMatch !== 'string') {\n    return false;\n  }\n\n  var normalizedText = normalize(textToMatch, {\n    trim: trim,\n    collapseWhitespace: collapseWhitespace\n  });\n\n  if (typeof matcher === 'string') {\n    return normalizedText === matcher;\n  } else if (typeof matcher === 'function') {\n    return matcher(normalizedText, node);\n  } else {\n    return matcher.test(normalizedText);\n  }\n}\n\nfunction normalize(text, _ref3) {\n  var trim = _ref3.trim,\n      collapseWhitespace = _ref3.collapseWhitespace;\n  var normalizedText = text;\n  normalizedText = trim ? normalizedText.trim() : normalizedText;\n  normalizedText = collapseWhitespace ? normalizedText.replace(/\\s+/g, ' ') : normalizedText;\n  return normalizedText;\n}\n\nfunction getNodeText(node) {\n  var window = node.ownerDocument.defaultView;\n  return Array.from(node.childNodes).filter(function (child) {\n    return child.nodeType === window.Node.TEXT_NODE && Boolean(child.textContent);\n  }).map(function (c) {\n    return c.textContent;\n  }).join('');\n}\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction unwrapExports(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x.default : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar colorName = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};\nvar conversions = createCommonjsModule(function (module) {\n  /* MIT license */\n  // NOTE: conversions should only return primitive values (i.e. arrays, or\n  //       values that give correct `typeof` results).\n  //       do not use box values types (i.e. Number(), String(), etc.)\n  var reverseKeywords = {};\n\n  for (var key in colorName) {\n    if (colorName.hasOwnProperty(key)) {\n      reverseKeywords[colorName[key]] = key;\n    }\n  }\n\n  var convert = module.exports = {\n    rgb: {\n      channels: 3,\n      labels: 'rgb'\n    },\n    hsl: {\n      channels: 3,\n      labels: 'hsl'\n    },\n    hsv: {\n      channels: 3,\n      labels: 'hsv'\n    },\n    hwb: {\n      channels: 3,\n      labels: 'hwb'\n    },\n    cmyk: {\n      channels: 4,\n      labels: 'cmyk'\n    },\n    xyz: {\n      channels: 3,\n      labels: 'xyz'\n    },\n    lab: {\n      channels: 3,\n      labels: 'lab'\n    },\n    lch: {\n      channels: 3,\n      labels: 'lch'\n    },\n    hex: {\n      channels: 1,\n      labels: ['hex']\n    },\n    keyword: {\n      channels: 1,\n      labels: ['keyword']\n    },\n    ansi16: {\n      channels: 1,\n      labels: ['ansi16']\n    },\n    ansi256: {\n      channels: 1,\n      labels: ['ansi256']\n    },\n    hcg: {\n      channels: 3,\n      labels: ['h', 'c', 'g']\n    },\n    apple: {\n      channels: 3,\n      labels: ['r16', 'g16', 'b16']\n    },\n    gray: {\n      channels: 1,\n      labels: ['gray']\n    }\n  }; // hide .channels and .labels properties\n\n  for (var model in convert) {\n    if (convert.hasOwnProperty(model)) {\n      if (!('channels' in convert[model])) {\n        throw new Error('missing channels property: ' + model);\n      }\n\n      if (!('labels' in convert[model])) {\n        throw new Error('missing channel labels property: ' + model);\n      }\n\n      if (convert[model].labels.length !== convert[model].channels) {\n        throw new Error('channel and label counts mismatch: ' + model);\n      }\n\n      var channels = convert[model].channels;\n      var labels = convert[model].labels;\n      delete convert[model].channels;\n      delete convert[model].labels;\n      Object.defineProperty(convert[model], 'channels', {\n        value: channels\n      });\n      Object.defineProperty(convert[model], 'labels', {\n        value: labels\n      });\n    }\n  }\n\n  convert.rgb.hsl = function (rgb) {\n    var r = rgb[0] / 255;\n    var g = rgb[1] / 255;\n    var b = rgb[2] / 255;\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n    var delta = max - min;\n    var h;\n    var s;\n    var l;\n\n    if (max === min) {\n      h = 0;\n    } else if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else if (b === max) {\n      h = 4 + (r - g) / delta;\n    }\n\n    h = Math.min(h * 60, 360);\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    l = (min + max) / 2;\n\n    if (max === min) {\n      s = 0;\n    } else if (l <= 0.5) {\n      s = delta / (max + min);\n    } else {\n      s = delta / (2 - max - min);\n    }\n\n    return [h, s * 100, l * 100];\n  };\n\n  convert.rgb.hsv = function (rgb) {\n    var rdif;\n    var gdif;\n    var bdif;\n    var h;\n    var s;\n    var r = rgb[0] / 255;\n    var g = rgb[1] / 255;\n    var b = rgb[2] / 255;\n    var v = Math.max(r, g, b);\n    var diff = v - Math.min(r, g, b);\n\n    var diffc = function diffc(c) {\n      return (v - c) / 6 / diff + 1 / 2;\n    };\n\n    if (diff === 0) {\n      h = s = 0;\n    } else {\n      s = diff / v;\n      rdif = diffc(r);\n      gdif = diffc(g);\n      bdif = diffc(b);\n\n      if (r === v) {\n        h = bdif - gdif;\n      } else if (g === v) {\n        h = 1 / 3 + rdif - bdif;\n      } else if (b === v) {\n        h = 2 / 3 + gdif - rdif;\n      }\n\n      if (h < 0) {\n        h += 1;\n      } else if (h > 1) {\n        h -= 1;\n      }\n    }\n\n    return [h * 360, s * 100, v * 100];\n  };\n\n  convert.rgb.hwb = function (rgb) {\n    var r = rgb[0];\n    var g = rgb[1];\n    var b = rgb[2];\n    var h = convert.rgb.hsl(rgb)[0];\n    var w = 1 / 255 * Math.min(r, Math.min(g, b));\n    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  };\n\n  convert.rgb.cmyk = function (rgb) {\n    var r = rgb[0] / 255;\n    var g = rgb[1] / 255;\n    var b = rgb[2] / 255;\n    var c;\n    var m;\n    var y;\n    var k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  };\n  /**\n   * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n   * */\n\n\n  function comparativeDistance(x, y) {\n    return Math.pow(x[0] - y[0], 2) + Math.pow(x[1] - y[1], 2) + Math.pow(x[2] - y[2], 2);\n  }\n\n  convert.rgb.keyword = function (rgb) {\n    var reversed = reverseKeywords[rgb];\n\n    if (reversed) {\n      return reversed;\n    }\n\n    var currentClosestDistance = Infinity;\n    var currentClosestKeyword;\n\n    for (var keyword in colorName) {\n      if (colorName.hasOwnProperty(keyword)) {\n        var value = colorName[keyword]; // Compute comparative distance\n\n        var distance = comparativeDistance(rgb, value); // Check if its less, if so set as closest\n\n        if (distance < currentClosestDistance) {\n          currentClosestDistance = distance;\n          currentClosestKeyword = keyword;\n        }\n      }\n    }\n\n    return currentClosestKeyword;\n  };\n\n  convert.keyword.rgb = function (keyword) {\n    return colorName[keyword];\n  };\n\n  convert.rgb.xyz = function (rgb) {\n    var r = rgb[0] / 255;\n    var g = rgb[1] / 255;\n    var b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  };\n\n  convert.rgb.lab = function (rgb) {\n    var xyz = convert.rgb.xyz(rgb);\n    var x = xyz[0];\n    var y = xyz[1];\n    var z = xyz[2];\n    var l;\n    var a;\n    var b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  };\n\n  convert.hsl.rgb = function (hsl) {\n    var h = hsl[0] / 360;\n    var s = hsl[1] / 100;\n    var l = hsl[2] / 100;\n    var t1;\n    var t2;\n    var t3;\n    var rgb;\n    var val;\n\n    if (s === 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) {\n      t2 = l * (1 + s);\n    } else {\n      t2 = l + s - l * s;\n    }\n\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n\n      if (t3 < 0) {\n        t3++;\n      }\n\n      if (t3 > 1) {\n        t3--;\n      }\n\n      if (6 * t3 < 1) {\n        val = t1 + (t2 - t1) * 6 * t3;\n      } else if (2 * t3 < 1) {\n        val = t2;\n      } else if (3 * t3 < 2) {\n        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n      } else {\n        val = t1;\n      }\n\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  };\n\n  convert.hsl.hsv = function (hsl) {\n    var h = hsl[0];\n    var s = hsl[1] / 100;\n    var l = hsl[2] / 100;\n    var smin = s;\n    var lmin = Math.max(l, 0.01);\n    var sv;\n    var v;\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    smin *= lmin <= 1 ? lmin : 2 - lmin;\n    v = (l + s) / 2;\n    sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  };\n\n  convert.hsv.rgb = function (hsv) {\n    var h = hsv[0] / 60;\n    var s = hsv[1] / 100;\n    var v = hsv[2] / 100;\n    var hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h);\n    var p = 255 * v * (1 - s);\n    var q = 255 * v * (1 - s * f);\n    var t = 255 * v * (1 - s * (1 - f));\n    v *= 255;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  };\n\n  convert.hsv.hsl = function (hsv) {\n    var h = hsv[0];\n    var s = hsv[1] / 100;\n    var v = hsv[2] / 100;\n    var vmin = Math.max(v, 0.01);\n    var lmin;\n    var sl;\n    var l;\n    l = (2 - s) * v;\n    lmin = (2 - s) * vmin;\n    sl = s * vmin;\n    sl /= lmin <= 1 ? lmin : 2 - lmin;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }; // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  convert.hwb.rgb = function (hwb) {\n    var h = hwb[0] / 360;\n    var wh = hwb[1] / 100;\n    var bl = hwb[2] / 100;\n    var ratio = wh + bl;\n    var i;\n    var v;\n    var f;\n    var n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) !== 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    var r;\n    var g;\n    var b;\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  };\n\n  convert.cmyk.rgb = function (cmyk) {\n    var c = cmyk[0] / 100;\n    var m = cmyk[1] / 100;\n    var y = cmyk[2] / 100;\n    var k = cmyk[3] / 100;\n    var r;\n    var g;\n    var b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  };\n\n  convert.xyz.rgb = function (xyz) {\n    var x = xyz[0] / 100;\n    var y = xyz[1] / 100;\n    var z = xyz[2] / 100;\n    var r;\n    var g;\n    var b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  };\n\n  convert.xyz.lab = function (xyz) {\n    var x = xyz[0];\n    var y = xyz[1];\n    var z = xyz[2];\n    var l;\n    var a;\n    var b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  };\n\n  convert.lab.xyz = function (lab) {\n    var l = lab[0];\n    var a = lab[1];\n    var b = lab[2];\n    var x;\n    var y;\n    var z;\n    y = (l + 16) / 116;\n    x = a / 500 + y;\n    z = y - b / 200;\n    var y2 = Math.pow(y, 3);\n    var x2 = Math.pow(x, 3);\n    var z2 = Math.pow(z, 3);\n    y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n    x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n    z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n    x *= 95.047;\n    y *= 100;\n    z *= 108.883;\n    return [x, y, z];\n  };\n\n  convert.lab.lch = function (lab) {\n    var l = lab[0];\n    var a = lab[1];\n    var b = lab[2];\n    var hr;\n    var h;\n    var c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  };\n\n  convert.lch.lab = function (lch) {\n    var l = lch[0];\n    var c = lch[1];\n    var h = lch[2];\n    var a;\n    var b;\n    var hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  };\n\n  convert.rgb.ansi16 = function (args) {\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n    value = Math.round(value / 50);\n\n    if (value === 0) {\n      return 30;\n    }\n\n    var ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));\n\n    if (value === 2) {\n      ansi += 60;\n    }\n\n    return ansi;\n  };\n\n  convert.hsv.ansi16 = function (args) {\n    // optimization here; we already know the value and don't need to get\n    // it converted for us.\n    return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n  };\n\n  convert.rgb.ansi256 = function (args) {\n    var r = args[0];\n    var g = args[1];\n    var b = args[2]; // we use the extended greyscale palette here, with the exception of\n    // black and white. normal palette only has 4 greyscale shades.\n\n    if (r === g && g === b) {\n      if (r < 8) {\n        return 16;\n      }\n\n      if (r > 248) {\n        return 231;\n      }\n\n      return Math.round((r - 8) / 247 * 24) + 232;\n    }\n\n    var ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);\n    return ansi;\n  };\n\n  convert.ansi16.rgb = function (args) {\n    var color = args % 10; // handle greyscale\n\n    if (color === 0 || color === 7) {\n      if (args > 50) {\n        color += 3.5;\n      }\n\n      color = color / 10.5 * 255;\n      return [color, color, color];\n    }\n\n    var mult = (~~(args > 50) + 1) * 0.5;\n    var r = (color & 1) * mult * 255;\n    var g = (color >> 1 & 1) * mult * 255;\n    var b = (color >> 2 & 1) * mult * 255;\n    return [r, g, b];\n  };\n\n  convert.ansi256.rgb = function (args) {\n    // handle greyscale\n    if (args >= 232) {\n      var c = (args - 232) * 10 + 8;\n      return [c, c, c];\n    }\n\n    args -= 16;\n    var rem;\n    var r = Math.floor(args / 36) / 5 * 255;\n    var g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n    var b = rem % 6 / 5 * 255;\n    return [r, g, b];\n  };\n\n  convert.rgb.hex = function (args) {\n    var integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);\n    var string = integer.toString(16).toUpperCase();\n    return '000000'.substring(string.length) + string;\n  };\n\n  convert.hex.rgb = function (args) {\n    var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\n    if (!match) {\n      return [0, 0, 0];\n    }\n\n    var colorString = match[0];\n\n    if (match[0].length === 3) {\n      colorString = colorString.split('').map(function (char) {\n        return char + char;\n      }).join('');\n    }\n\n    var integer = parseInt(colorString, 16);\n    var r = integer >> 16 & 0xFF;\n    var g = integer >> 8 & 0xFF;\n    var b = integer & 0xFF;\n    return [r, g, b];\n  };\n\n  convert.rgb.hcg = function (rgb) {\n    var r = rgb[0] / 255;\n    var g = rgb[1] / 255;\n    var b = rgb[2] / 255;\n    var max = Math.max(Math.max(r, g), b);\n    var min = Math.min(Math.min(r, g), b);\n    var chroma = max - min;\n    var grayscale;\n    var hue;\n\n    if (chroma < 1) {\n      grayscale = min / (1 - chroma);\n    } else {\n      grayscale = 0;\n    }\n\n    if (chroma <= 0) {\n      hue = 0;\n    } else if (max === r) {\n      hue = (g - b) / chroma % 6;\n    } else if (max === g) {\n      hue = 2 + (b - r) / chroma;\n    } else {\n      hue = 4 + (r - g) / chroma + 4;\n    }\n\n    hue /= 6;\n    hue %= 1;\n    return [hue * 360, chroma * 100, grayscale * 100];\n  };\n\n  convert.hsl.hcg = function (hsl) {\n    var s = hsl[1] / 100;\n    var l = hsl[2] / 100;\n    var c = 1;\n    var f = 0;\n\n    if (l < 0.5) {\n      c = 2.0 * s * l;\n    } else {\n      c = 2.0 * s * (1.0 - l);\n    }\n\n    if (c < 1.0) {\n      f = (l - 0.5 * c) / (1.0 - c);\n    }\n\n    return [hsl[0], c * 100, f * 100];\n  };\n\n  convert.hsv.hcg = function (hsv) {\n    var s = hsv[1] / 100;\n    var v = hsv[2] / 100;\n    var c = s * v;\n    var f = 0;\n\n    if (c < 1.0) {\n      f = (v - c) / (1 - c);\n    }\n\n    return [hsv[0], c * 100, f * 100];\n  };\n\n  convert.hcg.rgb = function (hcg) {\n    var h = hcg[0] / 360;\n    var c = hcg[1] / 100;\n    var g = hcg[2] / 100;\n\n    if (c === 0.0) {\n      return [g * 255, g * 255, g * 255];\n    }\n\n    var pure = [0, 0, 0];\n    var hi = h % 1 * 6;\n    var v = hi % 1;\n    var w = 1 - v;\n    var mg = 0;\n\n    switch (Math.floor(hi)) {\n      case 0:\n        pure[0] = 1;\n        pure[1] = v;\n        pure[2] = 0;\n        break;\n\n      case 1:\n        pure[0] = w;\n        pure[1] = 1;\n        pure[2] = 0;\n        break;\n\n      case 2:\n        pure[0] = 0;\n        pure[1] = 1;\n        pure[2] = v;\n        break;\n\n      case 3:\n        pure[0] = 0;\n        pure[1] = w;\n        pure[2] = 1;\n        break;\n\n      case 4:\n        pure[0] = v;\n        pure[1] = 0;\n        pure[2] = 1;\n        break;\n\n      default:\n        pure[0] = 1;\n        pure[1] = 0;\n        pure[2] = w;\n    }\n\n    mg = (1.0 - c) * g;\n    return [(c * pure[0] + mg) * 255, (c * pure[1] + mg) * 255, (c * pure[2] + mg) * 255];\n  };\n\n  convert.hcg.hsv = function (hcg) {\n    var c = hcg[1] / 100;\n    var g = hcg[2] / 100;\n    var v = c + g * (1.0 - c);\n    var f = 0;\n\n    if (v > 0.0) {\n      f = c / v;\n    }\n\n    return [hcg[0], f * 100, v * 100];\n  };\n\n  convert.hcg.hsl = function (hcg) {\n    var c = hcg[1] / 100;\n    var g = hcg[2] / 100;\n    var l = g * (1.0 - c) + 0.5 * c;\n    var s = 0;\n\n    if (l > 0.0 && l < 0.5) {\n      s = c / (2 * l);\n    } else if (l >= 0.5 && l < 1.0) {\n      s = c / (2 * (1 - l));\n    }\n\n    return [hcg[0], s * 100, l * 100];\n  };\n\n  convert.hcg.hwb = function (hcg) {\n    var c = hcg[1] / 100;\n    var g = hcg[2] / 100;\n    var v = c + g * (1.0 - c);\n    return [hcg[0], (v - c) * 100, (1 - v) * 100];\n  };\n\n  convert.hwb.hcg = function (hwb) {\n    var w = hwb[1] / 100;\n    var b = hwb[2] / 100;\n    var v = 1 - b;\n    var c = v - w;\n    var g = 0;\n\n    if (c < 1) {\n      g = (v - c) / (1 - c);\n    }\n\n    return [hwb[0], c * 100, g * 100];\n  };\n\n  convert.apple.rgb = function (apple) {\n    return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];\n  };\n\n  convert.rgb.apple = function (rgb) {\n    return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];\n  };\n\n  convert.gray.rgb = function (args) {\n    return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n  };\n\n  convert.gray.hsl = convert.gray.hsv = function (args) {\n    return [0, 0, args[0]];\n  };\n\n  convert.gray.hwb = function (gray) {\n    return [0, 100, gray[0]];\n  };\n\n  convert.gray.cmyk = function (gray) {\n    return [0, 0, 0, gray[0]];\n  };\n\n  convert.gray.lab = function (gray) {\n    return [gray[0], 0, 0];\n  };\n\n  convert.gray.hex = function (gray) {\n    var val = Math.round(gray[0] / 100 * 255) & 0xFF;\n    var integer = (val << 16) + (val << 8) + val;\n    var string = integer.toString(16).toUpperCase();\n    return '000000'.substring(string.length) + string;\n  };\n\n  convert.rgb.gray = function (rgb) {\n    var val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n    return [val / 255 * 100];\n  };\n});\nvar conversions_1 = conversions.rgb;\nvar conversions_2 = conversions.hsl;\nvar conversions_3 = conversions.hsv;\nvar conversions_4 = conversions.hwb;\nvar conversions_5 = conversions.cmyk;\nvar conversions_6 = conversions.xyz;\nvar conversions_7 = conversions.lab;\nvar conversions_8 = conversions.lch;\nvar conversions_9 = conversions.hex;\nvar conversions_10 = conversions.keyword;\nvar conversions_11 = conversions.ansi16;\nvar conversions_12 = conversions.ansi256;\nvar conversions_13 = conversions.hcg;\nvar conversions_14 = conversions.apple;\nvar conversions_15 = conversions.gray;\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n  var graph = {}; // https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\n  var models = Object.keys(conversions);\n\n  for (var len = models.length, i = 0; i < len; i++) {\n    graph[models[i]] = {\n      // http://jsperf.com/1-vs-infinity\n      // micro-opt, but this is simple.\n      distance: -1,\n      parent: null\n    };\n  }\n\n  return graph;\n} // https://en.wikipedia.org/wiki/Breadth-first_search\n\n\nfunction deriveBFS(fromModel) {\n  var graph = buildGraph();\n  var queue = [fromModel]; // unshift -> queue -> pop\n\n  graph[fromModel].distance = 0;\n\n  while (queue.length) {\n    var current = queue.pop();\n    var adjacents = Object.keys(conversions[current]);\n\n    for (var len = adjacents.length, i = 0; i < len; i++) {\n      var adjacent = adjacents[i];\n      var node = graph[adjacent];\n\n      if (node.distance === -1) {\n        node.distance = graph[current].distance + 1;\n        node.parent = current;\n        queue.unshift(adjacent);\n      }\n    }\n  }\n\n  return graph;\n}\n\nfunction link(from, to) {\n  return function (args) {\n    return to(from(args));\n  };\n}\n\nfunction wrapConversion(toModel, graph) {\n  var path = [graph[toModel].parent, toModel];\n  var fn = conversions[graph[toModel].parent][toModel];\n  var cur = graph[toModel].parent;\n\n  while (graph[cur].parent) {\n    path.unshift(graph[cur].parent);\n    fn = link(conversions[graph[cur].parent][cur], fn);\n    cur = graph[cur].parent;\n  }\n\n  fn.conversion = path;\n  return fn;\n}\n\nvar route = function route(fromModel) {\n  var graph = deriveBFS(fromModel);\n  var conversion = {};\n  var models = Object.keys(graph);\n\n  for (var len = models.length, i = 0; i < len; i++) {\n    var toModel = models[i];\n    var node = graph[toModel];\n\n    if (node.parent === null) {\n      // no possible conversion, or this node is the source model.\n      continue;\n    }\n\n    conversion[toModel] = wrapConversion(toModel, graph);\n  }\n\n  return conversion;\n};\n\nvar convert = {};\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n  var wrappedFn = function wrappedFn(args) {\n    if (args === undefined || args === null) {\n      return args;\n    }\n\n    if (arguments.length > 1) {\n      args = Array.prototype.slice.call(arguments);\n    }\n\n    return fn(args);\n  }; // preserve .conversion property if there is one\n\n\n  if ('conversion' in fn) {\n    wrappedFn.conversion = fn.conversion;\n  }\n\n  return wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n  var wrappedFn = function wrappedFn(args) {\n    if (args === undefined || args === null) {\n      return args;\n    }\n\n    if (arguments.length > 1) {\n      args = Array.prototype.slice.call(arguments);\n    }\n\n    var result = fn(args); // we're assuming the result is an array here.\n    // see notice in conversions.js; don't use box types\n    // in conversion functions.\n\n    if (typeof result === 'object') {\n      for (var len = result.length, i = 0; i < len; i++) {\n        result[i] = Math.round(result[i]);\n      }\n    }\n\n    return result;\n  }; // preserve .conversion property if there is one\n\n\n  if ('conversion' in fn) {\n    wrappedFn.conversion = fn.conversion;\n  }\n\n  return wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n  convert[fromModel] = {};\n  Object.defineProperty(convert[fromModel], 'channels', {\n    value: conversions[fromModel].channels\n  });\n  Object.defineProperty(convert[fromModel], 'labels', {\n    value: conversions[fromModel].labels\n  });\n  var routes = route(fromModel);\n  var routeModels = Object.keys(routes);\n  routeModels.forEach(function (toModel) {\n    var fn = routes[toModel];\n    convert[fromModel][toModel] = wrapRounded(fn);\n    convert[fromModel][toModel].raw = wrapRaw(fn);\n  });\n});\nvar colorConvert = convert;\nvar ansiStyles = createCommonjsModule(function (module) {\n  var wrapAnsi16 = function wrapAnsi16(fn, offset) {\n    return function () {\n      var code = fn.apply(colorConvert, arguments);\n      return \"\\x1B[\".concat(code + offset, \"m\");\n    };\n  };\n\n  var wrapAnsi256 = function wrapAnsi256(fn, offset) {\n    return function () {\n      var code = fn.apply(colorConvert, arguments);\n      return \"\\x1B[\".concat(38 + offset, \";5;\").concat(code, \"m\");\n    };\n  };\n\n  var wrapAnsi16m = function wrapAnsi16m(fn, offset) {\n    return function () {\n      var rgb = fn.apply(colorConvert, arguments);\n      return \"\\x1B[\".concat(38 + offset, \";2;\").concat(rgb[0], \";\").concat(rgb[1], \";\").concat(rgb[2], \"m\");\n    };\n  };\n\n  function assembleStyles() {\n    var codes = new Map();\n    var styles = {\n      modifier: {\n        reset: [0, 0],\n        // 21 isn't widely supported and 22 does the same thing\n        bold: [1, 22],\n        dim: [2, 22],\n        italic: [3, 23],\n        underline: [4, 24],\n        inverse: [7, 27],\n        hidden: [8, 28],\n        strikethrough: [9, 29]\n      },\n      color: {\n        black: [30, 39],\n        red: [31, 39],\n        green: [32, 39],\n        yellow: [33, 39],\n        blue: [34, 39],\n        magenta: [35, 39],\n        cyan: [36, 39],\n        white: [37, 39],\n        gray: [90, 39],\n        // Bright color\n        redBright: [91, 39],\n        greenBright: [92, 39],\n        yellowBright: [93, 39],\n        blueBright: [94, 39],\n        magentaBright: [95, 39],\n        cyanBright: [96, 39],\n        whiteBright: [97, 39]\n      },\n      bgColor: {\n        bgBlack: [40, 49],\n        bgRed: [41, 49],\n        bgGreen: [42, 49],\n        bgYellow: [43, 49],\n        bgBlue: [44, 49],\n        bgMagenta: [45, 49],\n        bgCyan: [46, 49],\n        bgWhite: [47, 49],\n        // Bright color\n        bgBlackBright: [100, 49],\n        bgRedBright: [101, 49],\n        bgGreenBright: [102, 49],\n        bgYellowBright: [103, 49],\n        bgBlueBright: [104, 49],\n        bgMagentaBright: [105, 49],\n        bgCyanBright: [106, 49],\n        bgWhiteBright: [107, 49]\n      }\n    }; // Fix humans\n\n    styles.color.grey = styles.color.gray;\n\n    var _arr = Object.keys(styles);\n\n    for (var _i = 0; _i < _arr.length; _i++) {\n      var groupName = _arr[_i];\n      var group = styles[groupName];\n\n      var _arr3 = Object.keys(group);\n\n      for (var _i3 = 0; _i3 < _arr3.length; _i3++) {\n        var styleName = _arr3[_i3];\n        var style = group[styleName];\n        styles[styleName] = {\n          open: \"\\x1B[\".concat(style[0], \"m\"),\n          close: \"\\x1B[\".concat(style[1], \"m\")\n        };\n        group[styleName] = styles[styleName];\n        codes.set(style[0], style[1]);\n      }\n\n      Object.defineProperty(styles, groupName, {\n        value: group,\n        enumerable: false\n      });\n      Object.defineProperty(styles, 'codes', {\n        value: codes,\n        enumerable: false\n      });\n    }\n\n    var ansi2ansi = function ansi2ansi(n) {\n      return n;\n    };\n\n    var rgb2rgb = function rgb2rgb(r, g, b) {\n      return [r, g, b];\n    };\n\n    styles.color.close = \"\\x1B[39m\";\n    styles.bgColor.close = \"\\x1B[49m\";\n    styles.color.ansi = {\n      ansi: wrapAnsi16(ansi2ansi, 0)\n    };\n    styles.color.ansi256 = {\n      ansi256: wrapAnsi256(ansi2ansi, 0)\n    };\n    styles.color.ansi16m = {\n      rgb: wrapAnsi16m(rgb2rgb, 0)\n    };\n    styles.bgColor.ansi = {\n      ansi: wrapAnsi16(ansi2ansi, 10)\n    };\n    styles.bgColor.ansi256 = {\n      ansi256: wrapAnsi256(ansi2ansi, 10)\n    };\n    styles.bgColor.ansi16m = {\n      rgb: wrapAnsi16m(rgb2rgb, 10)\n    };\n\n    var _arr2 = Object.keys(colorConvert);\n\n    for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n      var key = _arr2[_i2];\n\n      if (typeof colorConvert[key] !== 'object') {\n        continue;\n      }\n\n      var suite = colorConvert[key];\n\n      if (key === 'ansi16') {\n        key = 'ansi';\n      }\n\n      if ('ansi16' in suite) {\n        styles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n        styles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n      }\n\n      if ('ansi256' in suite) {\n        styles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n        styles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n      }\n\n      if ('rgb' in suite) {\n        styles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n        styles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n      }\n    }\n\n    return styles;\n  } // Make the export immutable\n\n\n  Object.defineProperty(module, 'exports', {\n    enumerable: true,\n    get: assembleStyles\n  });\n});\nvar collections = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.printIteratorEntries = printIteratorEntries;\n  exports.printIteratorValues = printIteratorValues;\n  exports.printListItems = printListItems;\n  exports.printObjectProperties = printObjectProperties;\n\n  var getSymbols = Object.getOwnPropertySymbols || function (obj) {\n    return [];\n  };\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *\n   */\n\n\n  var isSymbol = function isSymbol(key) {\n    return (// $FlowFixMe string literal `symbol`. This value is not a valid `typeof` return value\n      typeof key === 'symbol' || toString.call(key) === '[object Symbol]'\n    );\n  }; // Return entries (for example, of a map)\n  // with spacing, indentation, and comma\n  // without surrounding punctuation (for example, braces)\n\n\n  function printIteratorEntries( // Flow 0.51.0: property `@@iterator` of $Iterator not found in Object\n  // To allow simplistic getRecordIterator in immutable.js\n  iterator, config, indentation, depth, refs, printer) {\n    var separator = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : ': ';\n    var result = '';\n    var current = iterator.next();\n\n    if (!current.done) {\n      result += config.spacingOuter;\n      var indentationNext = indentation + config.indent;\n\n      while (!current.done) {\n        var name = printer(current.value[0], config, indentationNext, depth, refs);\n        var value = printer(current.value[1], config, indentationNext, depth, refs);\n        result += indentationNext + name + separator + value;\n        current = iterator.next();\n\n        if (!current.done) {\n          result += ',' + config.spacingInner;\n        } else if (!config.min) {\n          result += ',';\n        }\n      }\n\n      result += config.spacingOuter + indentation;\n    }\n\n    return result;\n  } // Return values (for example, of a set)\n  // with spacing, indentation, and comma\n  // without surrounding punctuation (braces or brackets)\n\n\n  function printIteratorValues(iterator, config, indentation, depth, refs, printer) {\n    var result = '';\n    var current = iterator.next();\n\n    if (!current.done) {\n      result += config.spacingOuter;\n      var indentationNext = indentation + config.indent;\n\n      while (!current.done) {\n        result += indentationNext + printer(current.value, config, indentationNext, depth, refs);\n        current = iterator.next();\n\n        if (!current.done) {\n          result += ',' + config.spacingInner;\n        } else if (!config.min) {\n          result += ',';\n        }\n      }\n\n      result += config.spacingOuter + indentation;\n    }\n\n    return result;\n  } // Return items (for example, of an array)\n  // with spacing, indentation, and comma\n  // without surrounding punctuation (for example, brackets)\n\n\n  function printListItems(list, config, indentation, depth, refs, printer) {\n    var result = '';\n\n    if (list.length) {\n      result += config.spacingOuter;\n      var indentationNext = indentation + config.indent;\n\n      for (var i = 0; i < list.length; i++) {\n        result += indentationNext + printer(list[i], config, indentationNext, depth, refs);\n\n        if (i < list.length - 1) {\n          result += ',' + config.spacingInner;\n        } else if (!config.min) {\n          result += ',';\n        }\n      }\n\n      result += config.spacingOuter + indentation;\n    }\n\n    return result;\n  } // Return properties of an object\n  // with spacing, indentation, and comma\n  // without surrounding punctuation (for example, braces)\n\n\n  function printObjectProperties(val, config, indentation, depth, refs, printer) {\n    var result = '';\n    var keys = Object.keys(val).sort();\n    var symbols = getSymbols(val);\n\n    if (symbols.length) {\n      keys = keys.filter(function (key) {\n        return !isSymbol(key);\n      }).concat(symbols);\n    }\n\n    if (keys.length) {\n      result += config.spacingOuter;\n      var indentationNext = indentation + config.indent;\n\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var name = printer(key, config, indentationNext, depth, refs);\n        var value = printer(val[key], config, indentationNext, depth, refs);\n        result += indentationNext + name + ': ' + value;\n\n        if (i < keys.length - 1) {\n          result += ',' + config.spacingInner;\n        } else if (!config.min) {\n          result += ',';\n        }\n      }\n\n      result += config.spacingOuter + indentation;\n    }\n\n    return result;\n  }\n});\nunwrapExports(collections);\nvar collections_1 = collections.printIteratorEntries;\nvar collections_2 = collections.printIteratorValues;\nvar collections_3 = collections.printListItems;\nvar collections_4 = collections.printObjectProperties;\nvar asymmetric_matcher = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.test = exports.serialize = undefined;\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *\n   */\n\n  var asymmetricMatcher = Symbol.for('jest.asymmetricMatcher');\n  var SPACE = ' ';\n\n  var serialize = exports.serialize = function (val, config, indentation, depth, refs, printer) {\n    var stringedValue = val.toString();\n\n    if (stringedValue === 'ArrayContaining' || stringedValue === 'ArrayNotContaining') {\n      if (++depth > config.maxDepth) {\n        return '[' + stringedValue + ']';\n      }\n\n      return stringedValue + SPACE + '[' + (0, collections.printListItems)(val.sample, config, indentation, depth, refs, printer) + ']';\n    }\n\n    if (stringedValue === 'ObjectContaining' || stringedValue === 'ObjectNotContaining') {\n      if (++depth > config.maxDepth) {\n        return '[' + stringedValue + ']';\n      }\n\n      return stringedValue + SPACE + '{' + (0, collections.printObjectProperties)(val.sample, config, indentation, depth, refs, printer) + '}';\n    }\n\n    if (stringedValue === 'StringMatching' || stringedValue === 'StringNotMatching') {\n      return stringedValue + SPACE + printer(val.sample, config, indentation, depth, refs);\n    }\n\n    if (stringedValue === 'StringContaining' || stringedValue === 'StringNotContaining') {\n      return stringedValue + SPACE + printer(val.sample, config, indentation, depth, refs);\n    }\n\n    return val.toAsymmetricMatcher();\n  };\n\n  var test = exports.test = function (val) {\n    return val && val.$$typeof === asymmetricMatcher;\n  };\n\n  exports.default = {\n    serialize: serialize,\n    test: test\n  };\n});\nunwrapExports(asymmetric_matcher);\nvar asymmetric_matcher_1 = asymmetric_matcher.test;\nvar asymmetric_matcher_2 = asymmetric_matcher.serialize;\n\nvar ansiRegex = function ansiRegex() {\n  var pattern = [\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[a-zA-Z\\\\d]*)*)?\\\\u0007)\", '(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PRZcf-ntqry=><~]))'].join('|');\n  return new RegExp(pattern, 'g');\n};\n\nvar convert_ansi = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.serialize = exports.test = undefined;\n\n  var _ansiRegex2 = _interopRequireDefault(ansiRegex);\n\n  var _ansiStyles2 = _interopRequireDefault(ansiStyles);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var toHumanReadableAnsi = function toHumanReadableAnsi(text) {\n    return text.replace((0, _ansiRegex2.default)(), function (match, offset, string) {\n      switch (match) {\n        case _ansiStyles2.default.red.close:\n        case _ansiStyles2.default.green.close:\n        case _ansiStyles2.default.cyan.close:\n        case _ansiStyles2.default.gray.close:\n        case _ansiStyles2.default.white.close:\n        case _ansiStyles2.default.yellow.close:\n        case _ansiStyles2.default.bgRed.close:\n        case _ansiStyles2.default.bgGreen.close:\n        case _ansiStyles2.default.bgYellow.close:\n        case _ansiStyles2.default.inverse.close:\n        case _ansiStyles2.default.dim.close:\n        case _ansiStyles2.default.bold.close:\n        case _ansiStyles2.default.reset.open:\n        case _ansiStyles2.default.reset.close:\n          return '</>';\n\n        case _ansiStyles2.default.red.open:\n          return '<red>';\n\n        case _ansiStyles2.default.green.open:\n          return '<green>';\n\n        case _ansiStyles2.default.cyan.open:\n          return '<cyan>';\n\n        case _ansiStyles2.default.gray.open:\n          return '<gray>';\n\n        case _ansiStyles2.default.white.open:\n          return '<white>';\n\n        case _ansiStyles2.default.yellow.open:\n          return '<yellow>';\n\n        case _ansiStyles2.default.bgRed.open:\n          return '<bgRed>';\n\n        case _ansiStyles2.default.bgGreen.open:\n          return '<bgGreen>';\n\n        case _ansiStyles2.default.bgYellow.open:\n          return '<bgYellow>';\n\n        case _ansiStyles2.default.inverse.open:\n          return '<inverse>';\n\n        case _ansiStyles2.default.dim.open:\n          return '<dim>';\n\n        case _ansiStyles2.default.bold.open:\n          return '<bold>';\n\n        default:\n          return '';\n      }\n    });\n  };\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *\n   */\n\n\n  var test = exports.test = function (val) {\n    return typeof val === 'string' && val.match((0, _ansiRegex2.default)());\n  };\n\n  var serialize = exports.serialize = function (val, config, indentation, depth, refs, printer) {\n    return printer(toHumanReadableAnsi(val), config, indentation, depth, refs);\n  };\n\n  exports.default = {\n    serialize: serialize,\n    test: test\n  };\n});\nunwrapExports(convert_ansi);\nvar convert_ansi_1 = convert_ansi.serialize;\nvar convert_ansi_2 = convert_ansi.test;\nvar dom_collection = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.serialize = exports.test = undefined;\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *\n   */\n\n  var SPACE = ' ';\n  var COLLECTION_NAMES = ['DOMStringMap', 'NamedNodeMap'];\n\n  var test = exports.test = function (val) {\n    return val && val.constructor && COLLECTION_NAMES.indexOf(val.constructor.name) !== -1;\n  };\n\n  var convertCollectionToObject = function convertCollectionToObject(collection) {\n    var result = {};\n\n    if (collection.constructor.name === 'NamedNodeMap') {\n      for (var i = 0; i < collection.length; i++) {\n        result[collection[i].name] = collection[i].value;\n      }\n    } else {\n      result = Object.assign({}, collection);\n    }\n\n    return result;\n  };\n\n  var serialize = exports.serialize = function (collection, config, indentation, depth, refs, printer) {\n    if (++depth > config.maxDepth) {\n      return '[' + collection.constructor.name + ']';\n    }\n\n    return collection.constructor.name + SPACE + '{' + (0, collections.printObjectProperties)(convertCollectionToObject(collection), config, indentation, depth, refs, printer) + '}';\n  };\n\n  exports.default = {\n    serialize: serialize,\n    test: test\n  };\n});\nunwrapExports(dom_collection);\nvar dom_collection_1 = dom_collection.serialize;\nvar dom_collection_2 = dom_collection.test;\nvar escape_html = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.default = escapeHTML;\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *\n   */\n\n  function escapeHTML(str) {\n    return str.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n});\nunwrapExports(escape_html);\nvar markup = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.printElementAsLeaf = exports.printElement = exports.printComment = exports.printText = exports.printChildren = exports.printProps = undefined;\n\n  var _escape_html2 = _interopRequireDefault(escape_html);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  } // Return empty string if keys is empty.\n\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *\n   */\n\n\n  var printProps = exports.printProps = function (keys, props, config, indentation, depth, refs, printer) {\n    var indentationNext = indentation + config.indent;\n    var colors = config.colors;\n    return keys.map(function (key) {\n      var value = props[key];\n      var printed = printer(value, config, indentationNext, depth, refs);\n\n      if (typeof value !== 'string') {\n        if (printed.indexOf('\\n') !== -1) {\n          printed = config.spacingOuter + indentationNext + printed + config.spacingOuter + indentation;\n        }\n\n        printed = '{' + printed + '}';\n      }\n\n      return config.spacingInner + indentation + colors.prop.open + key + colors.prop.close + '=' + colors.value.open + printed + colors.value.close;\n    }).join('');\n  }; // Return empty string if children is empty.\n\n\n  var printChildren = exports.printChildren = function (children, config, indentation, depth, refs, printer) {\n    return children.map(function (child) {\n      return config.spacingOuter + indentation + (typeof child === 'string' ? printText(child, config) : printer(child, config, indentation, depth, refs));\n    }).join('');\n  };\n\n  var printText = exports.printText = function (text, config) {\n    var contentColor = config.colors.content;\n    return contentColor.open + (0, _escape_html2.default)(text) + contentColor.close;\n  };\n\n  var printComment = exports.printComment = function (comment, config) {\n    var commentColor = config.colors.comment;\n    return commentColor.open + '<!--' + (0, _escape_html2.default)(comment) + '-->' + commentColor.close;\n  }; // Separate the functions to format props, children, and element,\n  // so a plugin could override a particular function, if needed.\n  // Too bad, so sad: the traditional (but unnecessary) space\n  // in a self-closing tagColor requires a second test of printedProps.\n\n\n  var printElement = exports.printElement = function (type, printedProps, printedChildren, config, indentation) {\n    var tagColor = config.colors.tag;\n    return tagColor.open + '<' + type + (printedProps && tagColor.close + printedProps + config.spacingOuter + indentation + tagColor.open) + (printedChildren ? '>' + tagColor.close + printedChildren + config.spacingOuter + indentation + tagColor.open + '</' + type : (printedProps && !config.min ? '' : ' ') + '/') + '>' + tagColor.close;\n  };\n\n  var printElementAsLeaf = exports.printElementAsLeaf = function (type, config) {\n    var tagColor = config.colors.tag;\n    return tagColor.open + '<' + type + tagColor.close + ' …' + tagColor.open + ' />' + tagColor.close;\n  };\n});\nunwrapExports(markup);\nvar markup_1 = markup.printElementAsLeaf;\nvar markup_2 = markup.printElement;\nvar markup_3 = markup.printComment;\nvar markup_4 = markup.printText;\nvar markup_5 = markup.printChildren;\nvar markup_6 = markup.printProps;\nvar dom_element = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.serialize = exports.test = undefined;\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *\n   */\n\n  var ELEMENT_NODE = 1;\n  var TEXT_NODE = 3;\n  var COMMENT_NODE = 8;\n  var FRAGMENT_NODE = 11;\n  var ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\n\n  var testNode = function testNode(nodeType, name) {\n    return nodeType === ELEMENT_NODE && ELEMENT_REGEXP.test(name) || nodeType === TEXT_NODE && name === 'Text' || nodeType === COMMENT_NODE && name === 'Comment' || nodeType === FRAGMENT_NODE && name === 'DocumentFragment';\n  };\n\n  var test = exports.test = function (val) {\n    return val && val.constructor && val.constructor.name && testNode(val.nodeType, val.constructor.name);\n  }; // Convert array of attribute objects to keys array and props object.\n\n\n  var keysMapper = function keysMapper(attribute) {\n    return attribute.name;\n  };\n\n  var propsReducer = function propsReducer(props, attribute) {\n    props[attribute.name] = attribute.value;\n    return props;\n  };\n\n  var serialize = exports.serialize = function (node, config, indentation, depth, refs, printer) {\n    if (node.nodeType === TEXT_NODE) {\n      return (0, markup.printText)(node.data, config);\n    }\n\n    if (node.nodeType === COMMENT_NODE) {\n      return (0, markup.printComment)(node.data, config);\n    }\n\n    var type = node.nodeType === FRAGMENT_NODE ? \"DocumentFragment\" : node.tagName.toLowerCase();\n\n    if (++depth > config.maxDepth) {\n      return (0, markup.printElementAsLeaf)(type, config);\n    }\n\n    return (0, markup.printElement)(type, (0, markup.printProps)(Array.prototype.map.call(node.attributes || [], keysMapper).sort(), Array.prototype.reduce.call(node.attributes || [], propsReducer, {}), config, indentation + config.indent, depth, refs, printer), (0, markup.printChildren)(Array.prototype.slice.call(node.childNodes || node.children), config, indentation + config.indent, depth, refs, printer), config, indentation);\n  };\n\n  exports.default = {\n    serialize: serialize,\n    test: test\n  };\n});\nunwrapExports(dom_element);\nvar dom_element_1 = dom_element.serialize;\nvar dom_element_2 = dom_element.test;\nvar immutable = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.test = exports.serialize = undefined; // SENTINEL constants are from https://github.com/facebook/immutable-js\n\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *\n   */\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n  var IS_RECORD_SENTINEL = '@@__IMMUTABLE_RECORD__@@'; // immutable v4\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var getImmutableName = function getImmutableName(name) {\n    return 'Immutable.' + name;\n  };\n\n  var printAsLeaf = function printAsLeaf(name) {\n    return '[' + name + ']';\n  };\n\n  var SPACE = ' ';\n  var LAZY = '…'; // Seq is lazy if it calls a method like filter\n\n  var printImmutableEntries = function printImmutableEntries(val, config, indentation, depth, refs, printer, type) {\n    return ++depth > config.maxDepth ? printAsLeaf(getImmutableName(type)) : getImmutableName(type) + SPACE + '{' + (0, collections.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer) + '}';\n  }; // Record has an entries method because it is a collection in immutable v3.\n  // Return an iterator for Immutable Record from version v3 or v4.\n\n\n  var getRecordEntries = function getRecordEntries(val) {\n    var i = 0;\n    return {\n      next: function next() {\n        if (i < val._keys.length) {\n          var key = val._keys[i++];\n          return {\n            done: false,\n            value: [key, val.get(key)]\n          };\n        }\n\n        return {\n          done: true\n        };\n      }\n    };\n  };\n\n  var printImmutableRecord = function printImmutableRecord(val, config, indentation, depth, refs, printer) {\n    // _name property is defined only for an Immutable Record instance\n    // which was constructed with a second optional descriptive name arg\n    var name = getImmutableName(val._name || 'Record');\n    return ++depth > config.maxDepth ? printAsLeaf(name) : name + SPACE + '{' + (0, collections.printIteratorEntries)(getRecordEntries(val), config, indentation, depth, refs, printer) + '}';\n  };\n\n  var printImmutableSeq = function printImmutableSeq(val, config, indentation, depth, refs, printer) {\n    var name = getImmutableName('Seq');\n\n    if (++depth > config.maxDepth) {\n      return printAsLeaf(name);\n    }\n\n    if (val[IS_KEYED_SENTINEL]) {\n      return name + SPACE + '{' + ( // from Immutable collection of entries or from ECMAScript object\n      val._iter || val._object ? (0, collections.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer) : LAZY) + '}';\n    }\n\n    return name + SPACE + '[' + (val._iter || // from Immutable collection of values\n    val._array || // from ECMAScript array\n    val._collection || // from ECMAScript collection in immutable v4\n    val._iterable // from ECMAScript collection in immutable v3\n    ? (0, collections.printIteratorValues)(val.values(), config, indentation, depth, refs, printer) : LAZY) + ']';\n  };\n\n  var printImmutableValues = function printImmutableValues(val, config, indentation, depth, refs, printer, type) {\n    return ++depth > config.maxDepth ? printAsLeaf(getImmutableName(type)) : getImmutableName(type) + SPACE + '[' + (0, collections.printIteratorValues)(val.values(), config, indentation, depth, refs, printer) + ']';\n  };\n\n  var serialize = exports.serialize = function (val, config, indentation, depth, refs, printer) {\n    if (val[IS_MAP_SENTINEL]) {\n      return printImmutableEntries(val, config, indentation, depth, refs, printer, val[IS_ORDERED_SENTINEL] ? 'OrderedMap' : 'Map');\n    }\n\n    if (val[IS_LIST_SENTINEL]) {\n      return printImmutableValues(val, config, indentation, depth, refs, printer, 'List');\n    }\n\n    if (val[IS_SET_SENTINEL]) {\n      return printImmutableValues(val, config, indentation, depth, refs, printer, val[IS_ORDERED_SENTINEL] ? 'OrderedSet' : 'Set');\n    }\n\n    if (val[IS_STACK_SENTINEL]) {\n      return printImmutableValues(val, config, indentation, depth, refs, printer, 'Stack');\n    }\n\n    if (val[IS_SEQ_SENTINEL]) {\n      return printImmutableSeq(val, config, indentation, depth, refs, printer);\n    } // For compatibility with immutable v3 and v4, let record be the default.\n\n\n    return printImmutableRecord(val, config, indentation, depth, refs, printer);\n  }; // Explicitly comparing sentinel properties to true avoids false positive\n  // when mock identity-obj-proxy returns the key as the value for any key.\n\n\n  var test = exports.test = function (val) {\n    return val && (val[IS_ITERABLE_SENTINEL] === true || val[IS_RECORD_SENTINEL] === true);\n  };\n\n  exports.default = {\n    serialize: serialize,\n    test: test\n  };\n});\nunwrapExports(immutable);\nvar immutable_1 = immutable.test;\nvar immutable_2 = immutable.serialize;\nvar react_element = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.test = exports.serialize = undefined;\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *\n   */\n\n  var elementSymbol = Symbol.for('react.element');\n  var fragmentSymbol = Symbol.for('react.fragment');\n  var forwardRefSymbol = Symbol.for('react.forward_ref');\n  var providerSymbol = Symbol.for('react.provider');\n  var contextSymbol = Symbol.for('react.context'); // Given element.props.children, or subtree during recursive traversal,\n  // return flattened array of children.\n\n  var getChildren = function getChildren(arg) {\n    var children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (Array.isArray(arg)) {\n      arg.forEach(function (item) {\n        getChildren(item, children);\n      });\n    } else if (arg != null && arg !== false) {\n      children.push(arg);\n    }\n\n    return children;\n  };\n\n  var getType = function getType(element) {\n    var type = element.type;\n\n    if (typeof type === 'string') {\n      return type;\n    }\n\n    if (typeof type === 'function') {\n      return type.displayName || type.name || 'Unknown';\n    }\n\n    if (type === fragmentSymbol) {\n      return 'React.Fragment';\n    }\n\n    if (typeof type === 'object' && type !== null) {\n      if (type.$$typeof === providerSymbol) {\n        return 'Context.Provider';\n      }\n\n      if (type.$$typeof === contextSymbol) {\n        return 'Context.Consumer';\n      }\n\n      if (type.$$typeof === forwardRefSymbol) {\n        var functionName = type.render.displayName || type.render.name || '';\n        return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';\n      }\n    }\n\n    return 'UNDEFINED';\n  };\n\n  var getPropKeys = function getPropKeys(element) {\n    var props = element.props;\n    return Object.keys(props).filter(function (key) {\n      return key !== 'children' && props[key] !== undefined;\n    }).sort();\n  };\n\n  var serialize = exports.serialize = function (element, config, indentation, depth, refs, printer) {\n    return ++depth > config.maxDepth ? (0, markup.printElementAsLeaf)(getType(element), config) : (0, markup.printElement)(getType(element), (0, markup.printProps)(getPropKeys(element), element.props, config, indentation + config.indent, depth, refs, printer), (0, markup.printChildren)(getChildren(element.props.children), config, indentation + config.indent, depth, refs, printer), config, indentation);\n  };\n\n  var test = exports.test = function (val) {\n    return val && val.$$typeof === elementSymbol;\n  };\n\n  exports.default = {\n    serialize: serialize,\n    test: test\n  };\n});\nunwrapExports(react_element);\nvar react_element_1 = react_element.test;\nvar react_element_2 = react_element.serialize;\nvar react_test_component = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.test = exports.serialize = undefined;\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *\n   */\n\n  var testSymbol = Symbol.for('react.test.json');\n\n  var getPropKeys = function getPropKeys(object) {\n    var props = object.props;\n    return props ? Object.keys(props).filter(function (key) {\n      return props[key] !== undefined;\n    }).sort() : [];\n  };\n\n  var serialize = exports.serialize = function (object, config, indentation, depth, refs, printer) {\n    return ++depth > config.maxDepth ? (0, markup.printElementAsLeaf)(object.type, config) : (0, markup.printElement)(object.type, object.props ? (0, markup.printProps)(getPropKeys(object), // Despite ternary expression, Flow 0.51.0 found incorrect error:\n    // undefined is incompatible with the expected param type of Object\n    // $FlowFixMe\n    object.props, config, indentation + config.indent, depth, refs, printer) : '', object.children ? (0, markup.printChildren)(object.children, config, indentation + config.indent, depth, refs, printer) : '', config, indentation);\n  };\n\n  var test = exports.test = function (val) {\n    return val && val.$$typeof === testSymbol;\n  };\n\n  exports.default = {\n    serialize: serialize,\n    test: test\n  };\n});\nunwrapExports(react_test_component);\nvar react_test_component_1 = react_test_component.test;\nvar react_test_component_2 = react_test_component.serialize;\nvar build = createCommonjsModule(function (module) {\n  var _ansiStyles2 = _interopRequireDefault(ansiStyles);\n\n  var _asymmetric_matcher2 = _interopRequireDefault(asymmetric_matcher);\n\n  var _convert_ansi2 = _interopRequireDefault(convert_ansi);\n\n  var _dom_collection2 = _interopRequireDefault(dom_collection);\n\n  var _dom_element2 = _interopRequireDefault(dom_element);\n\n  var _immutable2 = _interopRequireDefault(immutable);\n\n  var _react_element2 = _interopRequireDefault(react_element);\n\n  var _react_test_component2 = _interopRequireDefault(react_test_component);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *\n   */\n\n\n  var toString = Object.prototype.toString;\n  var toISOString = Date.prototype.toISOString;\n  var errorToString = Error.prototype.toString;\n  var regExpToString = RegExp.prototype.toString;\n  var symbolToString = Symbol.prototype.toString; // Explicitly comparing typeof constructor to function avoids undefined as name\n  // when mock identity-obj-proxy returns the key as the value for any key.\n\n  var getConstructorName = function getConstructorName(val) {\n    return typeof val.constructor === 'function' && val.constructor.name || 'Object';\n  }; // Is val is equal to global window object? Works even if it does not exist :)\n\n  /* global window */\n\n\n  var isWindow = function isWindow(val) {\n    return typeof window !== 'undefined' && val === window;\n  };\n\n  var SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\n  var NEWLINE_REGEXP = /\\n/gi;\n\n  var PrettyFormatPluginError =\n  /*#__PURE__*/\n  function (_Error) {\n    _inherits(PrettyFormatPluginError, _Error);\n\n    function PrettyFormatPluginError(message, stack) {\n      var _this;\n\n      _classCallCheck(this, PrettyFormatPluginError);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(PrettyFormatPluginError).call(this, message));\n      _this.stack = stack;\n      _this.name = _this.constructor.name;\n      return _this;\n    }\n\n    return PrettyFormatPluginError;\n  }(_wrapNativeSuper(Error));\n\n  function isToStringedArrayType(toStringed) {\n    return toStringed === '[object Array]' || toStringed === '[object ArrayBuffer]' || toStringed === '[object DataView]' || toStringed === '[object Float32Array]' || toStringed === '[object Float64Array]' || toStringed === '[object Int8Array]' || toStringed === '[object Int16Array]' || toStringed === '[object Int32Array]' || toStringed === '[object Uint8Array]' || toStringed === '[object Uint8ClampedArray]' || toStringed === '[object Uint16Array]' || toStringed === '[object Uint32Array]';\n  }\n\n  function printNumber(val) {\n    return Object.is(val, -0) ? '-0' : String(val);\n  }\n\n  function printFunction(val, printFunctionName) {\n    if (!printFunctionName) {\n      return '[Function]';\n    }\n\n    return '[Function ' + (val.name || 'anonymous') + ']';\n  }\n\n  function printSymbol(val) {\n    return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');\n  }\n\n  function printError(val) {\n    return '[' + errorToString.call(val) + ']';\n  }\n\n  function printBasicValue(val, printFunctionName, escapeRegex) {\n    if (val === true || val === false) {\n      return '' + val;\n    }\n\n    if (val === undefined) {\n      return 'undefined';\n    }\n\n    if (val === null) {\n      return 'null';\n    }\n\n    var typeOf = typeof val;\n\n    if (typeOf === 'number') {\n      return printNumber(val);\n    }\n\n    if (typeOf === 'string') {\n      return '\"' + val.replace(/\"|\\\\/g, '\\\\$&') + '\"';\n    }\n\n    if (typeOf === 'function') {\n      return printFunction(val, printFunctionName);\n    }\n\n    if (typeOf === 'symbol') {\n      return printSymbol(val);\n    }\n\n    var toStringed = toString.call(val);\n\n    if (toStringed === '[object WeakMap]') {\n      return 'WeakMap {}';\n    }\n\n    if (toStringed === '[object WeakSet]') {\n      return 'WeakSet {}';\n    }\n\n    if (toStringed === '[object Function]' || toStringed === '[object GeneratorFunction]') {\n      return printFunction(val, printFunctionName);\n    }\n\n    if (toStringed === '[object Symbol]') {\n      return printSymbol(val);\n    }\n\n    if (toStringed === '[object Date]') {\n      return isNaN(+val) ? 'Date { NaN }' : toISOString.call(val);\n    }\n\n    if (toStringed === '[object Error]') {\n      return printError(val);\n    }\n\n    if (toStringed === '[object RegExp]') {\n      if (escapeRegex) {\n        // https://github.com/benjamingr/RegExp.escape/blob/master/polyfill.js\n        return regExpToString.call(val).replace(/[\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n      }\n\n      return regExpToString.call(val);\n    }\n\n    if (val instanceof Error) {\n      return printError(val);\n    }\n\n    return null;\n  }\n\n  function printComplexValue(val, config, indentation, depth, refs, hasCalledToJSON) {\n    if (refs.indexOf(val) !== -1) {\n      return '[Circular]';\n    }\n\n    refs = refs.slice();\n    refs.push(val);\n    var hitMaxDepth = ++depth > config.maxDepth;\n    var min = config.min;\n\n    if (config.callToJSON && !hitMaxDepth && val.toJSON && typeof val.toJSON === 'function' && !hasCalledToJSON) {\n      return printer(val.toJSON(), config, indentation, depth, refs, true);\n    }\n\n    var toStringed = toString.call(val);\n\n    if (toStringed === '[object Arguments]') {\n      return hitMaxDepth ? '[Arguments]' : (min ? '' : 'Arguments ') + '[' + (0, collections.printListItems)(val, config, indentation, depth, refs, printer) + ']';\n    }\n\n    if (isToStringedArrayType(toStringed)) {\n      return hitMaxDepth ? '[' + val.constructor.name + ']' : (min ? '' : val.constructor.name + ' ') + '[' + (0, collections.printListItems)(val, config, indentation, depth, refs, printer) + ']';\n    }\n\n    if (toStringed === '[object Map]') {\n      return hitMaxDepth ? '[Map]' : 'Map {' + (0, collections.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer, ' => ') + '}';\n    }\n\n    if (toStringed === '[object Set]') {\n      return hitMaxDepth ? '[Set]' : 'Set {' + (0, collections.printIteratorValues)(val.values(), config, indentation, depth, refs, printer) + '}';\n    } // Avoid failure to serialize global window object in jsdom test environment.\n    // For example, not even relevant if window is prop of React element.\n\n\n    return hitMaxDepth || isWindow(val) ? '[' + getConstructorName(val) + ']' : (min ? '' : getConstructorName(val) + ' ') + '{' + (0, collections.printObjectProperties)(val, config, indentation, depth, refs, printer) + '}';\n  }\n\n  function printPlugin(plugin, val, config, indentation, depth, refs) {\n    var printed;\n\n    try {\n      printed = plugin.serialize ? plugin.serialize(val, config, indentation, depth, refs, printer) : plugin.print(val, function (valChild) {\n        return printer(valChild, config, indentation, depth, refs);\n      }, function (str) {\n        var indentationNext = indentation + config.indent;\n        return indentationNext + str.replace(NEWLINE_REGEXP, '\\n' + indentationNext);\n      }, {\n        edgeSpacing: config.spacingOuter,\n        min: config.min,\n        spacing: config.spacingInner\n      }, config.colors);\n    } catch (error) {\n      throw new PrettyFormatPluginError(error.message, error.stack);\n    }\n\n    if (typeof printed !== 'string') {\n      throw new Error(\"pretty-format: Plugin must return type \\\"string\\\" but instead returned \\\"\".concat(typeof printed, \"\\\".\"));\n    }\n\n    return printed;\n  }\n\n  function findPlugin(plugins, val) {\n    for (var p = 0; p < plugins.length; p++) {\n      try {\n        if (plugins[p].test(val)) {\n          return plugins[p];\n        }\n      } catch (error) {\n        throw new PrettyFormatPluginError(error.message, error.stack);\n      }\n    }\n\n    return null;\n  }\n\n  function printer(val, config, indentation, depth, refs, hasCalledToJSON) {\n    var plugin = findPlugin(config.plugins, val);\n\n    if (plugin !== null) {\n      return printPlugin(plugin, val, config, indentation, depth, refs);\n    }\n\n    var basicResult = printBasicValue(val, config.printFunctionName, config.escapeRegex);\n\n    if (basicResult !== null) {\n      return basicResult;\n    }\n\n    return printComplexValue(val, config, indentation, depth, refs, hasCalledToJSON);\n  }\n\n  var DEFAULT_THEME = {\n    comment: 'gray',\n    content: 'reset',\n    prop: 'yellow',\n    tag: 'cyan',\n    value: 'green'\n  };\n  var DEFAULT_THEME_KEYS = Object.keys(DEFAULT_THEME);\n  var DEFAULT_OPTIONS = {\n    callToJSON: true,\n    escapeRegex: false,\n    highlight: false,\n    indent: 2,\n    maxDepth: Infinity,\n    min: false,\n    plugins: [],\n    printFunctionName: true,\n    theme: DEFAULT_THEME\n  };\n\n  function validateOptions(options) {\n    Object.keys(options).forEach(function (key) {\n      if (!DEFAULT_OPTIONS.hasOwnProperty(key)) {\n        throw new Error(\"pretty-format: Unknown option \\\"\".concat(key, \"\\\".\"));\n      }\n    });\n\n    if (options.min && options.indent !== undefined && options.indent !== 0) {\n      throw new Error('pretty-format: Options \"min\" and \"indent\" cannot be used together.');\n    }\n\n    if (options.theme !== undefined) {\n      if (options.theme === null) {\n        throw new Error(\"pretty-format: Option \\\"theme\\\" must not be null.\");\n      }\n\n      if (typeof options.theme !== 'object') {\n        throw new Error(\"pretty-format: Option \\\"theme\\\" must be of type \\\"object\\\" but instead received \\\"\".concat(typeof options.theme, \"\\\".\"));\n      }\n    }\n  }\n\n  var getColorsHighlight = function getColorsHighlight(options // $FlowFixMe: Flow thinks keys from `Colors` are missing from `DEFAULT_THEME_KEYS`\n  ) {\n    return DEFAULT_THEME_KEYS.reduce(function (colors, key) {\n      var value = options.theme && options.theme[key] !== undefined ? options.theme[key] : DEFAULT_THEME[key];\n      var color = _ansiStyles2.default[value];\n\n      if (color && typeof color.close === 'string' && typeof color.open === 'string') {\n        colors[key] = color;\n      } else {\n        throw new Error(\"pretty-format: Option \\\"theme\\\" has a key \\\"\".concat(key, \"\\\" whose value \\\"\").concat(value, \"\\\" is undefined in ansi-styles.\"));\n      }\n\n      return colors;\n    }, Object.create(null));\n  };\n\n  var getColorsEmpty = function getColorsEmpty() {\n    return (// $FlowFixMe: Flow thinks keys from `Colors` are missing from `DEFAULT_THEME_KEYS`\n      DEFAULT_THEME_KEYS.reduce(function (colors, key) {\n        colors[key] = {\n          close: '',\n          open: ''\n        };\n        return colors;\n      }, Object.create(null))\n    );\n  };\n\n  var getPrintFunctionName = function getPrintFunctionName(options) {\n    return options && options.printFunctionName !== undefined ? options.printFunctionName : DEFAULT_OPTIONS.printFunctionName;\n  };\n\n  var getEscapeRegex = function getEscapeRegex(options) {\n    return options && options.escapeRegex !== undefined ? options.escapeRegex : DEFAULT_OPTIONS.escapeRegex;\n  };\n\n  var getConfig = function getConfig(options) {\n    return {\n      callToJSON: options && options.callToJSON !== undefined ? options.callToJSON : DEFAULT_OPTIONS.callToJSON,\n      colors: options && options.highlight ? getColorsHighlight(options) : getColorsEmpty(),\n      escapeRegex: getEscapeRegex(options),\n      indent: options && options.min ? '' : createIndent(options && options.indent !== undefined ? options.indent : DEFAULT_OPTIONS.indent),\n      maxDepth: options && options.maxDepth !== undefined ? options.maxDepth : DEFAULT_OPTIONS.maxDepth,\n      min: options && options.min !== undefined ? options.min : DEFAULT_OPTIONS.min,\n      plugins: options && options.plugins !== undefined ? options.plugins : DEFAULT_OPTIONS.plugins,\n      printFunctionName: getPrintFunctionName(options),\n      spacingInner: options && options.min ? ' ' : '\\n',\n      spacingOuter: options && options.min ? '' : '\\n'\n    };\n  };\n\n  function createIndent(indent) {\n    return new Array(indent + 1).join(' ');\n  }\n\n  function prettyFormat(val, options) {\n    if (options) {\n      validateOptions(options);\n\n      if (options.plugins) {\n        var plugin = findPlugin(options.plugins, val);\n\n        if (plugin !== null) {\n          return printPlugin(plugin, val, getConfig(options), '', 0, []);\n        }\n      }\n    }\n\n    var basicResult = printBasicValue(val, getPrintFunctionName(options), getEscapeRegex(options));\n\n    if (basicResult !== null) {\n      return basicResult;\n    }\n\n    return printComplexValue(val, getConfig(options), '', 0, []);\n  }\n\n  prettyFormat.plugins = {\n    AsymmetricMatcher: _asymmetric_matcher2.default,\n    ConvertAnsi: _convert_ansi2.default,\n    DOMCollection: _dom_collection2.default,\n    DOMElement: _dom_element2.default,\n    Immutable: _immutable2.default,\n    ReactElement: _react_element2.default,\n    ReactTestComponent: _react_test_component2.default\n  };\n  module.exports = prettyFormat;\n});\nvar prettyFormat = unwrapExports(build);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar objectWithoutProperties = function objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar _prettyFormat$plugins = prettyFormat.plugins,\n    DOMElement = _prettyFormat$plugins.DOMElement,\n    DOMCollection = _prettyFormat$plugins.DOMCollection;\n\nfunction prettyDOM(htmlElement, maxLength, options) {\n  if (htmlElement.documentElement) {\n    htmlElement = htmlElement.documentElement;\n  }\n\n  var debugContent = prettyFormat(htmlElement, _extends({\n    plugins: [DOMElement, DOMCollection],\n    printFunctionName: false,\n    highlight: true\n  }, options));\n  return maxLength !== undefined && htmlElement.outerHTML.length > maxLength ? debugContent.slice(0, maxLength) + '...' : debugContent;\n}\n/* eslint-disable complexity */\n\n\nfunction debugDOM(htmlElement) {\n  var limit = process.env.DEBUG_PRINT_LIMIT || 7000;\n  var inNode = typeof process !== 'undefined' && process.versions !== undefined && process.versions.node !== undefined;\n  var window = htmlElement.ownerDocument && htmlElement.ownerDocument.defaultView || undefined;\n  var inCypress = typeof window !== 'undefined' && window.Cypress;\n  /* istanbul ignore else */\n\n  if (inCypress) {\n    return '';\n  } else if (inNode) {\n    return prettyDOM(htmlElement, limit);\n  } else {\n    return prettyDOM(htmlElement, limit, {\n      highlight: false\n    });\n  }\n}\n/* eslint-enable complexity */\n\n\nfunction getElementError(message, container) {\n  return new Error([message, debugDOM(container)].filter(Boolean).join('\\n\\n'));\n}\n\nfunction firstResultOrNull(queryFunction) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var result = queryFunction.apply(undefined, args);\n  if (result.length === 0) return null;\n  return result[0];\n}\n\nfunction queryAllByAttribute(attribute, container, text) {\n  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref$exact = _ref.exact,\n      exact = _ref$exact === undefined ? true : _ref$exact,\n      _ref$collapseWhitespa = _ref.collapseWhitespace,\n      collapseWhitespace = _ref$collapseWhitespa === undefined ? true : _ref$collapseWhitespa,\n      _ref$trim = _ref.trim,\n      trim = _ref$trim === undefined ? true : _ref$trim;\n\n  var matcher = exact ? matches : fuzzyMatches;\n  var matchOpts = {\n    collapseWhitespace: collapseWhitespace,\n    trim: trim\n  };\n  return Array.from(container.querySelectorAll('[' + attribute + ']')).filter(function (node) {\n    return matcher(node.getAttribute(attribute), node, text, matchOpts);\n  });\n}\n\nfunction queryByAttribute() {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return firstResultOrNull.apply(undefined, [queryAllByAttribute].concat(args));\n}\n\nvar queryHelpers =\n/*#__PURE__*/\nObject.freeze({\n  debugDOM: debugDOM,\n  getElementError: getElementError,\n  firstResultOrNull: firstResultOrNull,\n  queryAllByAttribute: queryAllByAttribute,\n  queryByAttribute: queryByAttribute\n}); // Here are the queries for the library.\n// The queries here should only be things that are accessible to both users who are using a screen reader\n// and those who are not using a screen reader (with the exception of the data-testid attribute query).\n\nfunction queryAllLabelsByText(container, text) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$exact = _ref.exact,\n      exact = _ref$exact === undefined ? true : _ref$exact,\n      _ref$trim = _ref.trim,\n      trim = _ref$trim === undefined ? true : _ref$trim,\n      _ref$collapseWhitespa = _ref.collapseWhitespace,\n      collapseWhitespace = _ref$collapseWhitespa === undefined ? true : _ref$collapseWhitespa;\n\n  var matcher = exact ? matches : fuzzyMatches;\n  var matchOpts = {\n    collapseWhitespace: collapseWhitespace,\n    trim: trim\n  };\n  return Array.from(container.querySelectorAll('label')).filter(function (label) {\n    return matcher(label.textContent, label, text, matchOpts);\n  });\n}\n\nfunction queryAllByLabelText(container, text) {\n  var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref2$selector = _ref2.selector,\n      selector = _ref2$selector === undefined ? '*' : _ref2$selector,\n      _ref2$exact = _ref2.exact,\n      exact = _ref2$exact === undefined ? true : _ref2$exact,\n      _ref2$collapseWhitesp = _ref2.collapseWhitespace,\n      collapseWhitespace = _ref2$collapseWhitesp === undefined ? true : _ref2$collapseWhitesp,\n      _ref2$trim = _ref2.trim,\n      trim = _ref2$trim === undefined ? true : _ref2$trim;\n\n  var matchOpts = {\n    collapseWhitespace: collapseWhitespace,\n    trim: trim\n  };\n  var labels = queryAllLabelsByText(container, text, _extends({\n    exact: exact\n  }, matchOpts));\n  var labelledElements = labels.map(function (label) {\n    if (label.control) {\n      return label.control;\n    }\n    /* istanbul ignore if */\n\n\n    if (label.getAttribute('for')) {\n      // we're using this notation because with the # selector we would have to escape special characters e.g. user.name\n      // see https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector#Escaping_special_characters\n      // <label for=\"someId\">text</label><input id=\"someId\" />\n      // .control support has landed in jsdom (https://github.com/jsdom/jsdom/issues/2175)\n      return container.querySelector('[id=\"' + label.getAttribute('for') + '\"]');\n    }\n\n    if (label.getAttribute('id')) {\n      // <label id=\"someId\">text</label><input aria-labelledby=\"someId\" />\n      return container.querySelector('[aria-labelledby~=\"' + label.getAttribute('id') + '\"]');\n    }\n\n    if (label.childNodes.length) {\n      // <label>text: <input /></label>\n      return label.querySelector(selector);\n    }\n\n    return null;\n  }).filter(function (label) {\n    return label !== null;\n  }).concat(queryAllByAttribute('aria-label', container, text, {\n    exact: exact\n  }));\n  var possibleAriaLabelElements = queryAllByText(container, text, _extends({\n    exact: exact\n  }, matchOpts)).filter(function (el) {\n    return el.tagName !== 'LABEL';\n  }); // don't reprocess labels\n\n  var ariaLabelledElements = possibleAriaLabelElements.reduce(function (allLabelledElements, nextLabelElement) {\n    var labelId = nextLabelElement.getAttribute('id');\n    if (!labelId) return allLabelledElements; // ARIA labels can label multiple elements\n\n    var labelledNodes = Array.from(container.querySelectorAll('[aria-labelledby~=\"' + labelId + '\"]'));\n    return allLabelledElements.concat(labelledNodes);\n  }, []);\n  return Array.from(new Set([].concat(labelledElements, ariaLabelledElements)));\n}\n\nfunction queryByLabelText() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return firstResultOrNull.apply(undefined, [queryAllByLabelText].concat(args));\n}\n\nfunction queryAllByText(container, text) {\n  var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref3$selector = _ref3.selector,\n      selector = _ref3$selector === undefined ? '*' : _ref3$selector,\n      _ref3$exact = _ref3.exact,\n      exact = _ref3$exact === undefined ? true : _ref3$exact,\n      _ref3$collapseWhitesp = _ref3.collapseWhitespace,\n      collapseWhitespace = _ref3$collapseWhitesp === undefined ? true : _ref3$collapseWhitesp,\n      _ref3$trim = _ref3.trim,\n      trim = _ref3$trim === undefined ? true : _ref3$trim,\n      _ref3$ignore = _ref3.ignore,\n      ignore = _ref3$ignore === undefined ? 'script, style' : _ref3$ignore;\n\n  var matcher = exact ? matches : fuzzyMatches;\n  var matchOpts = {\n    collapseWhitespace: collapseWhitespace,\n    trim: trim\n  };\n  return Array.from(container.querySelectorAll(selector)).filter(function (node) {\n    return !ignore || !node.matches(ignore);\n  }).filter(function (node) {\n    return matcher(getNodeText(node), node, text, matchOpts);\n  });\n}\n\nfunction queryByText() {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return firstResultOrNull.apply(undefined, [queryAllByText].concat(args));\n}\n\nfunction queryAllByTitle(container, text) {\n  var _ref4 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref4$exact = _ref4.exact,\n      exact = _ref4$exact === undefined ? true : _ref4$exact,\n      _ref4$collapseWhitesp = _ref4.collapseWhitespace,\n      collapseWhitespace = _ref4$collapseWhitesp === undefined ? true : _ref4$collapseWhitesp,\n      _ref4$trim = _ref4.trim,\n      trim = _ref4$trim === undefined ? true : _ref4$trim;\n\n  var matcher = exact ? matches : fuzzyMatches;\n  var matchOpts = {\n    collapseWhitespace: collapseWhitespace,\n    trim: trim\n  };\n  return Array.from(container.querySelectorAll('[title], svg > title')).filter(function (node) {\n    return matcher(node.getAttribute('title'), node, text, matchOpts) || matcher(getNodeText(node), node, text, matchOpts);\n  });\n}\n\nfunction queryByTitle() {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return firstResultOrNull.apply(undefined, [queryAllByTitle].concat(args));\n}\n\nfunction queryAllBySelectText(container, text) {\n  var _ref5 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref5$exact = _ref5.exact,\n      exact = _ref5$exact === undefined ? true : _ref5$exact,\n      _ref5$collapseWhitesp = _ref5.collapseWhitespace,\n      collapseWhitespace = _ref5$collapseWhitesp === undefined ? true : _ref5$collapseWhitesp,\n      _ref5$trim = _ref5.trim,\n      trim = _ref5$trim === undefined ? true : _ref5$trim;\n\n  var matcher = exact ? matches : fuzzyMatches;\n  var matchOpts = {\n    collapseWhitespace: collapseWhitespace,\n    trim: trim\n  };\n  return Array.from(container.querySelectorAll('select')).filter(function (selectNode) {\n    var selectedOptions = Array.from(selectNode.options).filter(function (option) {\n      return option.selected;\n    });\n    return selectedOptions.some(function (optionNode) {\n      return matcher(getNodeText(optionNode), optionNode, text, matchOpts);\n    });\n  });\n}\n\nfunction queryBySelectText() {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return firstResultOrNull.apply(undefined, [queryAllBySelectText].concat(args));\n}\n\nvar queryByPlaceholderText = queryByAttribute.bind(null, 'placeholder');\nvar queryAllByPlaceholderText = queryAllByAttribute.bind(null, 'placeholder');\nvar queryByTestId = queryByAttribute.bind(null, 'data-testid');\nvar queryAllByTestId = queryAllByAttribute.bind(null, 'data-testid');\nvar queryByValue = queryByAttribute.bind(null, 'value');\nvar queryAllByValue = queryAllByAttribute.bind(null, 'value');\nvar queryByRole = queryByAttribute.bind(null, 'role');\nvar queryAllByRole = queryAllByAttribute.bind(null, 'role');\n\nfunction queryAllByAltText(container, alt) {\n  var _ref6 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref6$exact = _ref6.exact,\n      exact = _ref6$exact === undefined ? true : _ref6$exact,\n      _ref6$collapseWhitesp = _ref6.collapseWhitespace,\n      collapseWhitespace = _ref6$collapseWhitesp === undefined ? true : _ref6$collapseWhitesp,\n      _ref6$trim = _ref6.trim,\n      trim = _ref6$trim === undefined ? true : _ref6$trim;\n\n  var matcher = exact ? matches : fuzzyMatches;\n  var matchOpts = {\n    collapseWhitespace: collapseWhitespace,\n    trim: trim\n  };\n  return Array.from(container.querySelectorAll('img,input,area')).filter(function (node) {\n    return matcher(node.getAttribute('alt'), node, alt, matchOpts);\n  });\n}\n\nfunction queryByAltText() {\n  for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    args[_key5] = arguments[_key5];\n  }\n\n  return firstResultOrNull.apply(undefined, [queryAllByAltText].concat(args));\n} // getters\n// the reason we're not dynamically generating these functions that look so similar:\n// 1. The error messages are specific to each one and depend on arguments\n// 2. The stack trace will look better because it'll have a helpful method name.\n\n\nfunction getAllByTestId(container, id) {\n  for (var _len6 = arguments.length, rest = Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    rest[_key6 - 2] = arguments[_key6];\n  }\n\n  var els = queryAllByTestId.apply(undefined, [container, id].concat(rest));\n\n  if (!els.length) {\n    throw getElementError('Unable to find an element by: [data-testid=\"' + id + '\"]', container);\n  }\n\n  return els;\n}\n\nfunction getByTestId() {\n  for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n    args[_key7] = arguments[_key7];\n  }\n\n  return firstResultOrNull.apply(undefined, [getAllByTestId].concat(args));\n}\n\nfunction getAllByTitle(container, title) {\n  for (var _len8 = arguments.length, rest = Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {\n    rest[_key8 - 2] = arguments[_key8];\n  }\n\n  var els = queryAllByTitle.apply(undefined, [container, title].concat(rest));\n\n  if (!els.length) {\n    throw getElementError('Unable to find an element with the title: ' + title + '.', container);\n  }\n\n  return els;\n}\n\nfunction getByTitle() {\n  for (var _len9 = arguments.length, args = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    args[_key9] = arguments[_key9];\n  }\n\n  return firstResultOrNull.apply(undefined, [getAllByTitle].concat(args));\n}\n\nfunction getAllByValue(container, value) {\n  for (var _len10 = arguments.length, rest = Array(_len10 > 2 ? _len10 - 2 : 0), _key10 = 2; _key10 < _len10; _key10++) {\n    rest[_key10 - 2] = arguments[_key10];\n  }\n\n  var els = queryAllByValue.apply(undefined, [container, value].concat(rest));\n\n  if (!els.length) {\n    throw getElementError('Unable to find an element with the value: ' + value + '.', container);\n  }\n\n  return els;\n}\n\nfunction getByValue() {\n  for (var _len11 = arguments.length, args = Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    args[_key11] = arguments[_key11];\n  }\n\n  return firstResultOrNull.apply(undefined, [getAllByValue].concat(args));\n}\n\nfunction getAllByPlaceholderText(container, text) {\n  for (var _len12 = arguments.length, rest = Array(_len12 > 2 ? _len12 - 2 : 0), _key12 = 2; _key12 < _len12; _key12++) {\n    rest[_key12 - 2] = arguments[_key12];\n  }\n\n  var els = queryAllByPlaceholderText.apply(undefined, [container, text].concat(rest));\n\n  if (!els.length) {\n    throw getElementError('Unable to find an element with the placeholder text of: ' + text, container);\n  }\n\n  return els;\n}\n\nfunction getByPlaceholderText() {\n  for (var _len13 = arguments.length, args = Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n    args[_key13] = arguments[_key13];\n  }\n\n  return firstResultOrNull.apply(undefined, [getAllByPlaceholderText].concat(args));\n}\n\nfunction getAllByLabelText(container, text) {\n  for (var _len14 = arguments.length, rest = Array(_len14 > 2 ? _len14 - 2 : 0), _key14 = 2; _key14 < _len14; _key14++) {\n    rest[_key14 - 2] = arguments[_key14];\n  }\n\n  var els = queryAllByLabelText.apply(undefined, [container, text].concat(rest));\n\n  if (!els.length) {\n    var labels = queryAllLabelsByText.apply(undefined, [container, text].concat(rest));\n\n    if (labels.length) {\n      throw getElementError('Found a label with the text of: ' + text + ', however no form control was found associated to that label. Make sure you\\'re using the \"for\" attribute or \"aria-labelledby\" attribute correctly.', container);\n    } else {\n      throw getElementError('Unable to find a label with the text of: ' + text, container);\n    }\n  }\n\n  return els;\n}\n\nfunction getByLabelText() {\n  for (var _len15 = arguments.length, args = Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n    args[_key15] = arguments[_key15];\n  }\n\n  return firstResultOrNull.apply(undefined, [getAllByLabelText].concat(args));\n}\n\nfunction getAllByText(container, text) {\n  for (var _len16 = arguments.length, rest = Array(_len16 > 2 ? _len16 - 2 : 0), _key16 = 2; _key16 < _len16; _key16++) {\n    rest[_key16 - 2] = arguments[_key16];\n  }\n\n  var els = queryAllByText.apply(undefined, [container, text].concat(rest));\n\n  if (!els.length) {\n    throw getElementError('Unable to find an element with the text: ' + text + '. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.', container);\n  }\n\n  return els;\n}\n\nfunction getByText() {\n  for (var _len17 = arguments.length, args = Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n    args[_key17] = arguments[_key17];\n  }\n\n  return firstResultOrNull.apply(undefined, [getAllByText].concat(args));\n}\n\nfunction getAllByAltText(container, alt) {\n  for (var _len18 = arguments.length, rest = Array(_len18 > 2 ? _len18 - 2 : 0), _key18 = 2; _key18 < _len18; _key18++) {\n    rest[_key18 - 2] = arguments[_key18];\n  }\n\n  var els = queryAllByAltText.apply(undefined, [container, alt].concat(rest));\n\n  if (!els.length) {\n    throw getElementError('Unable to find an element with the alt text: ' + alt, container);\n  }\n\n  return els;\n}\n\nfunction getByAltText() {\n  for (var _len19 = arguments.length, args = Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n    args[_key19] = arguments[_key19];\n  }\n\n  return firstResultOrNull.apply(undefined, [getAllByAltText].concat(args));\n}\n\nfunction getAllByRole(container, id) {\n  for (var _len20 = arguments.length, rest = Array(_len20 > 2 ? _len20 - 2 : 0), _key20 = 2; _key20 < _len20; _key20++) {\n    rest[_key20 - 2] = arguments[_key20];\n  }\n\n  var els = queryAllByRole.apply(undefined, [container, id].concat(rest));\n\n  if (!els.length) {\n    throw getElementError('Unable to find an element by role=' + id, container);\n  }\n\n  return els;\n}\n\nfunction getByRole() {\n  for (var _len21 = arguments.length, args = Array(_len21), _key21 = 0; _key21 < _len21; _key21++) {\n    args[_key21] = arguments[_key21];\n  }\n\n  return firstResultOrNull.apply(undefined, [getAllByRole].concat(args));\n}\n\nfunction getAllBySelectText(container, text) {\n  for (var _len22 = arguments.length, rest = Array(_len22 > 2 ? _len22 - 2 : 0), _key22 = 2; _key22 < _len22; _key22++) {\n    rest[_key22 - 2] = arguments[_key22];\n  }\n\n  var els = queryAllBySelectText.apply(undefined, [container, text].concat(rest));\n\n  if (!els.length) {\n    throw getElementError('Unable to find a <select> element with the selected option\\'s text: ' + text, container);\n  }\n\n  return els;\n}\n\nfunction getBySelectText() {\n  for (var _len23 = arguments.length, args = Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {\n    args[_key23] = arguments[_key23];\n  }\n\n  return firstResultOrNull.apply(undefined, [getAllBySelectText].concat(args));\n}\n\nvar defaultQueries =\n/*#__PURE__*/\nObject.freeze({\n  queryByPlaceholderText: queryByPlaceholderText,\n  queryAllByPlaceholderText: queryAllByPlaceholderText,\n  getByPlaceholderText: getByPlaceholderText,\n  getAllByPlaceholderText: getAllByPlaceholderText,\n  queryByText: queryByText,\n  queryAllByText: queryAllByText,\n  getByText: getByText,\n  getAllByText: getAllByText,\n  queryByLabelText: queryByLabelText,\n  queryAllByLabelText: queryAllByLabelText,\n  getByLabelText: getByLabelText,\n  getAllByLabelText: getAllByLabelText,\n  queryByAltText: queryByAltText,\n  queryAllByAltText: queryAllByAltText,\n  getByAltText: getByAltText,\n  getAllByAltText: getAllByAltText,\n  queryBySelectText: queryBySelectText,\n  queryAllBySelectText: queryAllBySelectText,\n  getBySelectText: getBySelectText,\n  getAllBySelectText: getAllBySelectText,\n  queryByTestId: queryByTestId,\n  queryAllByTestId: queryAllByTestId,\n  getByTestId: getByTestId,\n  getAllByTestId: getAllByTestId,\n  queryByTitle: queryByTitle,\n  queryAllByTitle: queryAllByTitle,\n  getByTitle: getByTitle,\n  getAllByTitle: getAllByTitle,\n  queryByValue: queryByValue,\n  queryAllByValue: queryAllByValue,\n  getByValue: getByValue,\n  getAllByValue: getAllByValue,\n  queryByRole: queryByRole,\n  queryAllByRole: queryAllByRole,\n  getAllByRole: getAllByRole,\n  getByRole: getByRole\n});\n/**\n * @typedef {{[key: string]: Function}} FuncMap\n */\n\n/**\n * @param {HTMLElement} element container\n * @param {FuncMap} queries object of functions\n * @returns {FuncMap} returns object of functions bound to container\n */\n\nfunction getQueriesForElement(element) {\n  var queries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultQueries;\n  return Object.keys(queries).reduce(function (helpers, key) {\n    var fn = queries[key];\n    helpers[key] = fn.bind(null, element);\n    return helpers;\n  }, {});\n}\n\nvar lib = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0; // Used to avoid using Jest's fake timers.\n  // See https://github.com/TheBrainFamily/wait-for-expect/issues/4 for more info\n\n  var _ref = typeof window !== \"undefined\" ? window : commonjsGlobal,\n      setTimeout = _ref.setTimeout;\n  /**\n   * Waits for the expectation to pass and returns a Promise\n   *\n   * @param  expectation  Function  Expectation that has to complete without throwing\n   * @param  timeout  Number  Maximum wait interval, 4500ms by default\n   * @param  interval  Number  Wait-between-retries interval, 50ms by default\n   * @return  Promise  Promise to return a callback result\n   */\n\n\n  var waitForExpect = function waitForExpect(expectation) {\n    var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4500;\n    var interval = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;\n    var startTime = Date.now();\n    return new Promise(function (resolve, reject) {\n      var rejectOrRerun = function rejectOrRerun(error) {\n        if (Date.now() - startTime >= timeout) {\n          reject(error);\n          return;\n        } // eslint-disable-next-line no-use-before-define\n\n\n        setTimeout(runExpectation, interval);\n      };\n\n      function runExpectation() {\n        try {\n          Promise.resolve(expectation()).then(function () {\n            return resolve();\n          }).catch(rejectOrRerun);\n        } catch (error) {\n          rejectOrRerun(error);\n        }\n      }\n\n      setTimeout(runExpectation, 0);\n    });\n  };\n\n  var _default = waitForExpect;\n  exports.default = _default;\n  module.exports = exports[\"default\"];\n});\nvar waitForExpect = unwrapExports(lib);\n\nfunction wait() {\n  var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$timeout = _ref.timeout,\n      timeout = _ref$timeout === undefined ? 4500 : _ref$timeout,\n      _ref$interval = _ref.interval,\n      interval = _ref$interval === undefined ? 50 : _ref$interval;\n\n  return waitForExpect(callback, timeout, interval);\n}\n/*!\n * Shim for MutationObserver interface\n * Author: Graeme Yeates (github.com/megawac)\n * Repository: https://github.com/megawac/MutationObserver.js\n * License: WTFPL V2, 2004 (wtfpl.net).\n * Though credit and staring the repo will make me feel pretty, you can modify and redistribute as you please.\n * Attempts to follow spec (https://www.w3.org/TR/dom/#mutation-observers) as closely as possible for native javascript\n * See https://github.com/WebKit/webkit/blob/master/Source/WebCore/dom/MutationObserver.cpp for current webkit source c++ implementation\n */\n\n/**\n * prefix bugs:\n    - https://bugs.webkit.org/show_bug.cgi?id=85161\n    - https://bugzilla.mozilla.org/show_bug.cgi?id=749920\n * Don't use WebKitMutationObserver as Safari (6.0.5-6.1) use a buggy implementation\n*/\n\n\nvar MutationObserver = function (undefined) {\n  if (typeof window !== 'undefined' && typeof window.MutationObserver !== 'undefined') {\n    return window.MutationObserver;\n  }\n  /**\n   * @param {function(Array.<MutationRecord>, MutationObserver)} listener\n   * @constructor\n   */\n\n\n  function MutationObserver(listener) {\n    /**\n     * @type {Array.<Object>}\n     * @private\n     */\n    this._watched = [];\n    /** @private */\n\n    this._listener = listener;\n  }\n  /**\n   * Start a recursive timeout function to check all items being observed for mutations\n   * @type {MutationObserver} observer\n   * @private\n   */\n\n\n  function startMutationChecker(observer) {\n    (function check() {\n      var mutations = observer.takeRecords();\n\n      if (mutations.length) {\n        // fire away\n        // calling the listener with context is not spec but currently consistent with FF and WebKit\n        observer._listener(mutations, observer);\n      }\n      /** @private */\n\n\n      observer._timeout = setTimeout(check, MutationObserver._period);\n    })();\n  }\n  /**\n   * Period to check for mutations (~32 times/sec)\n   * @type {number}\n   * @expose\n   */\n\n\n  MutationObserver._period = 30\n  /*ms+runtime*/\n  ;\n  /**\n   * Exposed API\n   * @expose\n   * @final\n   */\n\n  MutationObserver.prototype = {\n    /**\n     * see https://dom.spec.whatwg.org/#dom-mutationobserver-observe\n     * not going to throw here but going to follow the current spec config sets\n     * @param {Node|null} $target\n     * @param {Object|null} config : MutationObserverInit configuration dictionary\n     * @expose\n     * @return undefined\n     */\n    observe: function observe($target, config) {\n      /**\n       * Using slightly different names so closure can go ham\n       * @type {!Object} : A custom mutation config\n       */\n      var settings = {\n        attr: !!(config.attributes || config.attributeFilter || config.attributeOldValue),\n        // some browsers enforce that subtree must be set with childList, attributes or characterData.\n        // We don't care as spec doesn't specify this rule.\n        kids: !!config.childList,\n        descendents: !!config.subtree,\n        charData: !!(config.characterData || config.characterDataOldValue)\n      };\n      var watched = this._watched; // remove already observed target element from pool\n\n      for (var i = 0; i < watched.length; i++) {\n        if (watched[i].tar === $target) watched.splice(i, 1);\n      }\n\n      if (config.attributeFilter) {\n        /**\n         * converts to a {key: true} dict for faster lookup\n         * @type {Object.<String,Boolean>}\n         */\n        settings.afilter = reduce(config.attributeFilter, function (a, b) {\n          a[b] = true;\n          return a;\n        }, {});\n      }\n\n      watched.push({\n        tar: $target,\n        fn: createMutationSearcher($target, settings)\n      }); // reconnect if not connected\n\n      if (!this._timeout) {\n        startMutationChecker(this);\n      }\n    },\n\n    /**\n     * Finds mutations since last check and empties the \"record queue\" i.e. mutations will only be found once\n     * @expose\n     * @return {Array.<MutationRecord>}\n     */\n    takeRecords: function takeRecords() {\n      var mutations = [];\n      var watched = this._watched;\n\n      for (var i = 0; i < watched.length; i++) {\n        watched[i].fn(mutations);\n      }\n\n      return mutations;\n    },\n\n    /**\n     * @expose\n     * @return undefined\n     */\n    disconnect: function disconnect() {\n      this._watched = []; // clear the stuff being observed\n\n      clearTimeout(this._timeout); // ready for garbage collection\n\n      /** @private */\n\n      this._timeout = null;\n    }\n  };\n  /**\n   * Simple MutationRecord pseudoclass. No longer exposing as its not fully compliant\n   * @param {Object} data\n   * @return {Object} a MutationRecord\n   */\n\n  function MutationRecord(data) {\n    var settings = {\n      // technically these should be on proto so hasOwnProperty will return false for non explicitly props\n      type: null,\n      target: null,\n      addedNodes: [],\n      removedNodes: [],\n      previousSibling: null,\n      nextSibling: null,\n      attributeName: null,\n      attributeNamespace: null,\n      oldValue: null\n    };\n\n    for (var prop in data) {\n      if (has(settings, prop) && data[prop] !== undefined) settings[prop] = data[prop];\n    }\n\n    return settings;\n  }\n  /**\n   * Creates a func to find all the mutations\n   *\n   * @param {Node} $target\n   * @param {!Object} config : A custom mutation config\n   */\n\n\n  function createMutationSearcher($target, config) {\n    /** type {Elestuct} */\n    var $oldstate = clone($target, config); // create the cloned datastructure\n\n    /**\n     * consumes array of mutations we can push to\n     *\n     * @param {Array.<MutationRecord>} mutations\n     */\n\n    return function (mutations) {\n      var olen = mutations.length,\n          dirty;\n\n      if (config.charData && $target.nodeType === 3 && $target.nodeValue !== $oldstate.charData) {\n        mutations.push(new MutationRecord({\n          type: \"characterData\",\n          target: $target,\n          oldValue: $oldstate.charData\n        }));\n      } // Alright we check base level changes in attributes... easy\n\n\n      if (config.attr && $oldstate.attr) {\n        findAttributeMutations(mutations, $target, $oldstate.attr, config.afilter);\n      } // check childlist or subtree for mutations\n\n\n      if (config.kids || config.descendents) {\n        dirty = searchSubtree(mutations, $target, $oldstate, config);\n      } // reclone data structure if theres changes\n\n\n      if (dirty || mutations.length !== olen) {\n        /** type {Elestuct} */\n        $oldstate = clone($target, config);\n      }\n    };\n  }\n  /* attributes + attributeFilter helpers */\n  // Check if the environment has the attribute bug (#4) which cause\n  // element.attributes.style to always be null.\n\n\n  var hasAttributeBug = false;\n\n  if (typeof document !== 'undefined') {\n    var testElement = document.createElement('i');\n    testElement.style.top = 0;\n    hasAttributeBug = testElement.attributes.style.value != 'null';\n  }\n  /**\n   * Gets an attribute value in an environment without attribute bug\n   *\n   * @param {Node} el\n   * @param {Attr} attr\n   * @return {String} an attribute value\n   */\n\n\n  function getAttributeSimple(el, attr) {\n    // There is a potential for a warning to occur here if the attribute is a\n    // custom attribute in IE<9 with a custom .toString() method. This is\n    // just a warning and doesn't affect execution (see #21)\n    return attr.value;\n  }\n  /**\n   * Gets an attribute value with special hack for style attribute (see #4)\n   *\n   * @param {Node} el\n   * @param {Attr} attr\n   * @return {String} an attribute value\n   */\n\n\n  function getAttributeWithStyleHack(el, attr) {\n    // As with getAttributeSimple there is a potential warning for custom attribtues in IE7.\n    return attr.name !== \"style\" ? attr.value : el.style.cssText;\n  }\n\n  var getAttributeValue = hasAttributeBug ? getAttributeSimple : getAttributeWithStyleHack;\n  /**\n   * fast helper to check to see if attributes object of an element has changed\n   * doesnt handle the textnode case\n   *\n   * @param {Array.<MutationRecord>} mutations\n   * @param {Node} $target\n   * @param {Object.<string, string>} $oldstate : Custom attribute clone data structure from clone\n   * @param {Object} filter\n   */\n\n  function findAttributeMutations(mutations, $target, $oldstate, filter) {\n    var checked = {};\n    var attributes = $target.attributes;\n    var attr;\n    var name;\n    var i = attributes.length;\n\n    while (i--) {\n      attr = attributes[i];\n      name = attr.name;\n\n      if (!filter || has(filter, name)) {\n        if (getAttributeValue($target, attr) !== $oldstate[name]) {\n          // The pushing is redundant but gzips very nicely\n          mutations.push(MutationRecord({\n            type: \"attributes\",\n            target: $target,\n            attributeName: name,\n            oldValue: $oldstate[name],\n            attributeNamespace: attr.namespaceURI // in ie<8 it incorrectly will return undefined\n\n          }));\n        }\n\n        checked[name] = true;\n      }\n    }\n\n    for (name in $oldstate) {\n      if (!checked[name]) {\n        mutations.push(MutationRecord({\n          target: $target,\n          type: \"attributes\",\n          attributeName: name,\n          oldValue: $oldstate[name]\n        }));\n      }\n    }\n  }\n  /**\n   * searchSubtree: array of mutations so far, element, element clone, bool\n   * synchronous dfs comparision of two nodes\n   * This function is applied to any observed element with childList or subtree specified\n   * Sorry this is kind of confusing as shit, tried to comment it a bit...\n   * codereview.stackexchange.com/questions/38351 discussion of an earlier version of this func\n   *\n   * @param {Array} mutations\n   * @param {Node} $target\n   * @param {!Object} $oldstate : A custom cloned node from clone()\n   * @param {!Object} config : A custom mutation config\n   */\n\n\n  function searchSubtree(mutations, $target, $oldstate, config) {\n    // Track if the tree is dirty and has to be recomputed (#14).\n    var dirty;\n    /*\n     * Helper to identify node rearrangment and stuff...\n     * There is no gaurentee that the same node will be identified for both added and removed nodes\n     * if the positions have been shuffled.\n     * conflicts array will be emptied by end of operation\n     */\n\n    function resolveConflicts(conflicts, node, $kids, $oldkids, numAddedNodes) {\n      // the distance between the first conflicting node and the last\n      var distance = conflicts.length - 1; // prevents same conflict being resolved twice consider when two nodes switch places.\n      // only one should be given a mutation event (note -~ is used as a math.ceil shorthand)\n\n      var counter = -~((distance - numAddedNodes) / 2);\n      var $cur;\n      var oldstruct;\n      var conflict;\n\n      while (conflict = conflicts.pop()) {\n        $cur = $kids[conflict.i];\n        oldstruct = $oldkids[conflict.j]; // attempt to determine if there was node rearrangement... won't gaurentee all matches\n        // also handles case where added/removed nodes cause nodes to be identified as conflicts\n\n        if (config.kids && counter && Math.abs(conflict.i - conflict.j) >= distance) {\n          mutations.push(MutationRecord({\n            type: \"childList\",\n            target: node,\n            addedNodes: [$cur],\n            removedNodes: [$cur],\n            // haha don't rely on this please\n            nextSibling: $cur.nextSibling,\n            previousSibling: $cur.previousSibling\n          }));\n          counter--; // found conflict\n        } // Alright we found the resorted nodes now check for other types of mutations\n\n\n        if (config.attr && oldstruct.attr) findAttributeMutations(mutations, $cur, oldstruct.attr, config.afilter);\n\n        if (config.charData && $cur.nodeType === 3 && $cur.nodeValue !== oldstruct.charData) {\n          mutations.push(MutationRecord({\n            type: \"characterData\",\n            target: $cur,\n            oldValue: oldstruct.charData\n          }));\n        } // now look @ subtree\n\n\n        if (config.descendents) findMutations($cur, oldstruct);\n      }\n    }\n    /**\n     * Main worker. Finds and adds mutations if there are any\n     * @param {Node} node\n     * @param {!Object} old : A cloned data structure using internal clone\n     */\n\n\n    function findMutations(node, old) {\n      var $kids = node.childNodes;\n      var $oldkids = old.kids;\n      var klen = $kids.length; // $oldkids will be undefined for text and comment nodes\n\n      var olen = $oldkids ? $oldkids.length : 0; // if (!olen && !klen) return; // both empty; clearly no changes\n      // we delay the intialization of these for marginal performance in the expected case (actually quite signficant on large subtrees when these would be otherwise unused)\n      // map of checked element of ids to prevent registering the same conflict twice\n\n      var map; // array of potential conflicts (ie nodes that may have been re arranged)\n\n      var conflicts;\n      var id; // element id from getElementId helper\n\n      var idx; // index of a moved or inserted element\n\n      var oldstruct; // current and old nodes\n\n      var $cur;\n      var $old; // track the number of added nodes so we can resolve conflicts more accurately\n\n      var numAddedNodes = 0; // iterate over both old and current child nodes at the same time\n\n      var i = 0,\n          j = 0; // while there is still anything left in $kids or $oldkids (same as i < $kids.length || j < $oldkids.length;)\n\n      while (i < klen || j < olen) {\n        // current and old nodes at the indexs\n        $cur = $kids[i];\n        oldstruct = $oldkids[j];\n        $old = oldstruct && oldstruct.node;\n\n        if ($cur === $old) {\n          // expected case - optimized for this case\n          // check attributes as specified by config\n          if (config.attr && oldstruct.attr)\n            /* oldstruct.attr instead of textnode check */\n            findAttributeMutations(mutations, $cur, oldstruct.attr, config.afilter); // check character data if node is a comment or textNode and it's being observed\n\n          if (config.charData && oldstruct.charData !== undefined && $cur.nodeValue !== oldstruct.charData) {\n            mutations.push(MutationRecord({\n              type: \"characterData\",\n              target: $cur,\n              oldValue: oldstruct.charData\n            }));\n          } // resolve conflicts; it will be undefined if there are no conflicts - otherwise an array\n\n\n          if (conflicts) resolveConflicts(conflicts, node, $kids, $oldkids, numAddedNodes); // recurse on next level of children. Avoids the recursive call when there are no children left to iterate\n\n          if (config.descendents && ($cur.childNodes.length || oldstruct.kids && oldstruct.kids.length)) findMutations($cur, oldstruct);\n          i++;\n          j++;\n        } else {\n          // (uncommon case) lookahead until they are the same again or the end of children\n          dirty = true;\n\n          if (!map) {\n            // delayed initalization (big perf benefit)\n            map = {};\n            conflicts = [];\n          }\n\n          if ($cur) {\n            // check id is in the location map otherwise do a indexOf search\n            if (!map[id = getElementId($cur)]) {\n              // to prevent double checking\n              // mark id as found\n              map[id] = true; // custom indexOf using comparitor checking oldkids[i].node === $cur\n\n              if ((idx = indexOfCustomNode($oldkids, $cur, j)) === -1) {\n                if (config.kids) {\n                  mutations.push(MutationRecord({\n                    type: \"childList\",\n                    target: node,\n                    addedNodes: [$cur],\n                    // $cur is a new node\n                    nextSibling: $cur.nextSibling,\n                    previousSibling: $cur.previousSibling\n                  }));\n                  numAddedNodes++;\n                }\n              } else {\n                conflicts.push({\n                  // add conflict\n                  i: i,\n                  j: idx\n                });\n              }\n            }\n\n            i++;\n          }\n\n          if ($old && // special case: the changes may have been resolved: i and j appear congurent so we can continue using the expected case\n          $old !== $kids[i]) {\n            if (!map[id = getElementId($old)]) {\n              map[id] = true;\n\n              if ((idx = indexOf($kids, $old, i)) === -1) {\n                if (config.kids) {\n                  mutations.push(MutationRecord({\n                    type: \"childList\",\n                    target: old.node,\n                    removedNodes: [$old],\n                    nextSibling: $oldkids[j + 1],\n                    // praise no indexoutofbounds exception\n                    previousSibling: $oldkids[j - 1]\n                  }));\n                  numAddedNodes--;\n                }\n              } else {\n                conflicts.push({\n                  i: idx,\n                  j: j\n                });\n              }\n            }\n\n            j++;\n          }\n        } // end uncommon case\n\n      } // end loop\n      // resolve any remaining conflicts\n\n\n      if (conflicts) resolveConflicts(conflicts, node, $kids, $oldkids, numAddedNodes);\n    }\n\n    findMutations($target, $oldstate);\n    return dirty;\n  }\n  /**\n   * Utility\n   * Cones a element into a custom data structure designed for comparision. https://gist.github.com/megawac/8201012\n   *\n   * @param {Node} $target\n   * @param {!Object} config : A custom mutation config\n   * @return {!Object} : Cloned data structure\n   */\n\n\n  function clone($target, config) {\n    var recurse = true; // set true so childList we'll always check the first level\n\n    return function copy($target) {\n      var elestruct = {\n        /** @type {Node} */\n        node: $target\n      }; // Store current character data of target text or comment node if the config requests\n      // those properties to be observed.\n\n      if (config.charData && ($target.nodeType === 3 || $target.nodeType === 8)) {\n        elestruct.charData = $target.nodeValue;\n      } // its either a element, comment, doc frag or document node\n      else {\n          // Add attr only if subtree is specified or top level and avoid if\n          // attributes is a document object (#13).\n          if (config.attr && recurse && $target.nodeType === 1) {\n            /**\n             * clone live attribute list to an object structure {name: val}\n             * @type {Object.<string, string>}\n             */\n            elestruct.attr = reduce($target.attributes, function (memo, attr) {\n              if (!config.afilter || config.afilter[attr.name]) {\n                memo[attr.name] = getAttributeValue($target, attr);\n              }\n\n              return memo;\n            }, {});\n          } // whether we should iterate the children of $target node\n\n\n          if (recurse && (config.kids || config.charData || config.attr && config.descendents)) {\n            /** @type {Array.<!Object>} : Array of custom clone */\n            elestruct.kids = map($target.childNodes, copy);\n          }\n\n          recurse = config.descendents;\n        }\n\n      return elestruct;\n    }($target);\n  }\n  /**\n   * indexOf an element in a collection of custom nodes\n   *\n   * @param {NodeList} set\n   * @param {!Object} $node : A custom cloned node\n   * @param {number} idx : index to start the loop\n   * @return {number}\n   */\n\n\n  function indexOfCustomNode(set, $node, idx) {\n    return indexOf(set, $node, idx, JSCompiler_renameProperty(\"node\"));\n  } // using a non id (eg outerHTML or nodeValue) is extremely naive and will run into issues with nodes that may appear the same like <li></li>\n\n\n  var counter = 1; // don't use 0 as id (falsy)\n\n  /** @const */\n\n  var expando = \"mo_id\";\n  /**\n   * Attempt to uniquely id an element for hashing. We could optimize this for legacy browsers but it hopefully wont be called enough to be a concern\n   *\n   * @param {Node} $ele\n   * @return {(string|number)}\n   */\n\n  function getElementId($ele) {\n    try {\n      return $ele.id || ($ele[expando] = $ele[expando] || counter++);\n    } catch (o_O) {\n      // ie <8 will throw if you set an unknown property on a text node\n      try {\n        return $ele.nodeValue; // naive\n      } catch (shitie) {\n        // when text node is removed: https://gist.github.com/megawac/8355978 :(\n        return counter++;\n      }\n    }\n  }\n  /**\n   * **map** Apply a mapping function to each item of a set\n   * @param {Array|NodeList} set\n   * @param {Function} iterator\n   */\n\n\n  function map(set, iterator) {\n    var results = [];\n\n    for (var index = 0; index < set.length; index++) {\n      results[index] = iterator(set[index], index, set);\n    }\n\n    return results;\n  }\n  /**\n   * **Reduce** builds up a single result from a list of values\n   * @param {Array|NodeList|NamedNodeMap} set\n   * @param {Function} iterator\n   * @param {*} [memo] Initial value of the memo.\n   */\n\n\n  function reduce(set, iterator, memo) {\n    for (var index = 0; index < set.length; index++) {\n      memo = iterator(memo, set[index], index, set);\n    }\n\n    return memo;\n  }\n  /**\n   * **indexOf** find index of item in collection.\n   * @param {Array|NodeList} set\n   * @param {Object} item\n   * @param {number} idx\n   * @param {string} [prop] Property on set item to compare to item\n   */\n\n\n  function indexOf(set, item, idx, prop) {\n    for (;\n    /*idx = ~~idx*/\n    idx < set.length; idx++) {\n      // start idx is always given as this is internal\n      if ((prop ? set[idx][prop] : set[idx]) === item) return idx;\n    }\n\n    return -1;\n  }\n  /**\n   * @param {Object} obj\n   * @param {(string|number)} prop\n   * @return {boolean}\n   */\n\n\n  function has(obj, prop) {\n    return obj[prop] !== undefined; // will be nicely inlined by gcc\n  } // GCC hack see https://stackoverflow.com/a/23202438/1517919\n\n\n  function JSCompiler_renameProperty(a) {\n    return a;\n  }\n\n  return MutationObserver;\n}(void 0);\n\nfunction newMutationObserver(onMutation) {\n  var MutationObserverConstructor = typeof window !== 'undefined' && typeof window.MutationObserver !== 'undefined' ? window.MutationObserver : MutationObserver;\n  return new MutationObserverConstructor(onMutation);\n}\n\nfunction getDocument() {\n  if (typeof window === 'undefined') {\n    throw new Error('Could not find default container');\n  }\n\n  return window.document;\n}\n\nfunction waitForElement(callback) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$container = _ref.container,\n      container = _ref$container === undefined ? getDocument() : _ref$container,\n      _ref$timeout = _ref.timeout,\n      timeout = _ref$timeout === undefined ? 4500 : _ref$timeout,\n      _ref$mutationObserver = _ref.mutationObserverOptions,\n      mutationObserverOptions = _ref$mutationObserver === undefined ? {\n    subtree: true,\n    childList: true,\n    attributes: true,\n    characterData: true\n  } : _ref$mutationObserver;\n\n  return new Promise(function (resolve, reject) {\n    if (typeof callback !== 'function') {\n      reject('waitForElement requires a callback as the first parameter');\n    }\n\n    var lastError = void 0;\n    var timer = setTimeout(onTimeout, timeout);\n    var observer = newMutationObserver(onMutation);\n    observer.observe(container, mutationObserverOptions);\n\n    function onDone(error, result) {\n      clearTimeout(timer);\n      setImmediate(function () {\n        return observer.disconnect();\n      });\n\n      if (error) {\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    }\n\n    function onMutation() {\n      try {\n        var result = callback();\n\n        if (result) {\n          onDone(null, result);\n        } // If `callback` returns falsy value, wait for the next mutation or timeout.\n\n      } catch (error) {\n        // Save the callback error to reject the promise with it.\n        lastError = error; // If `callback` throws an error, wait for the next mutation or timeout.\n      }\n    }\n\n    function onTimeout() {\n      onDone(lastError || new Error('Timed out in waitForElement.'), null);\n    }\n\n    onMutation();\n  });\n}\n\nfunction waitForDomChange() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$container = _ref.container,\n      container = _ref$container === undefined ? getDocument() : _ref$container,\n      _ref$timeout = _ref.timeout,\n      timeout = _ref$timeout === undefined ? 4500 : _ref$timeout,\n      _ref$mutationObserver = _ref.mutationObserverOptions,\n      mutationObserverOptions = _ref$mutationObserver === undefined ? {\n    subtree: true,\n    childList: true,\n    attributes: true,\n    characterData: true\n  } : _ref$mutationObserver;\n\n  return new Promise(function (resolve, reject) {\n    var timer = setTimeout(function () {\n      onDone(new Error('Timed out in waitForDomChange.'), null);\n    }, timeout);\n    var observer = newMutationObserver(function (mutationsList) {\n      onDone(null, mutationsList);\n    });\n    observer.observe(container, mutationObserverOptions);\n\n    function onDone(error, result) {\n      clearTimeout(timer);\n      setImmediate(function () {\n        return observer.disconnect();\n      });\n\n      if (error) {\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    }\n  });\n}\n\nvar eventMap = {\n  // Clipboard Events\n  copy: {\n    EventType: 'ClipboardEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  cut: {\n    EventType: 'ClipboardEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  paste: {\n    EventType: 'ClipboardEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  // Composition Events\n  compositionEnd: {\n    EventType: 'CompositionEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  compositionStart: {\n    EventType: 'CompositionEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  compositionUpdate: {\n    EventType: 'CompositionEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  // Keyboard Events\n  keyDown: {\n    EventType: 'KeyboardEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  keyPress: {\n    EventType: 'KeyboardEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  keyUp: {\n    EventType: 'KeyboardEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  // Focus Events\n  focus: {\n    EventType: 'FocusEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  blur: {\n    EventType: 'FocusEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  // Form Events\n  change: {\n    EventType: 'InputEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  input: {\n    EventType: 'InputEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  invalid: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: true\n    }\n  },\n  submit: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  // Mouse Events\n  click: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true,\n      button: 0\n    }\n  },\n  contextMenu: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  dblClick: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  drag: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  dragEnd: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  dragEnter: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  dragExit: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  dragLeave: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  dragOver: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  dragStart: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  drop: {\n    EventType: 'DragEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  mouseDown: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  mouseEnter: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  mouseLeave: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  mouseMove: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  mouseOut: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  mouseOver: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  mouseUp: {\n    EventType: 'MouseEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  // Selection Events\n  select: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  // Touch Events\n  touchCancel: {\n    EventType: 'TouchEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  touchEnd: {\n    EventType: 'TouchEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  touchMove: {\n    EventType: 'TouchEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  touchStart: {\n    EventType: 'TouchEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  // UI Events\n  scroll: {\n    EventType: 'UIEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  // Wheel Events\n  wheel: {\n    EventType: 'WheelEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  },\n  // Media Events\n  abort: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  canPlay: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  canPlayThrough: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  durationChange: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  emptied: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  encrypted: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  ended: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  // error: {\n  //   EventType: Event,\n  //   defaultInit: {bubbles: false, cancelable: false},\n  // },\n  loadedData: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  loadedMetadata: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  loadStart: {\n    EventType: 'ProgressEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  pause: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  play: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  playing: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  progress: {\n    EventType: 'ProgressEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  rateChange: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  seeked: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  seeking: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  stalled: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  suspend: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  timeUpdate: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  volumeChange: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  waiting: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  // Image Events\n  load: {\n    EventType: 'UIEvent',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  error: {\n    EventType: 'Event',\n    defaultInit: {\n      bubbles: false,\n      cancelable: false\n    }\n  },\n  // Animation Events\n  animationStart: {\n    EventType: 'AnimationEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  animationEnd: {\n    EventType: 'AnimationEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  animationIteration: {\n    EventType: 'AnimationEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: false\n    }\n  },\n  // Transition Events\n  transitionEnd: {\n    EventType: 'TransitionEvent',\n    defaultInit: {\n      bubbles: true,\n      cancelable: true\n    }\n  }\n};\nvar eventAliasMap = {\n  doubleClick: 'dblClick'\n};\n\nfunction fireEvent(element, event) {\n  return element.dispatchEvent(event);\n}\n\nObject.keys(eventMap).forEach(function (key) {\n  var _eventMap$key = eventMap[key],\n      EventType = _eventMap$key.EventType,\n      defaultInit = _eventMap$key.defaultInit;\n  var eventName = key.toLowerCase();\n\n  fireEvent[key] = function (node, init) {\n    var eventInit = _extends({}, defaultInit, init);\n\n    var _eventInit$target = eventInit.target;\n    _eventInit$target = _eventInit$target === undefined ? {} : _eventInit$target;\n    var value = _eventInit$target.value,\n        files = _eventInit$target.files,\n        targetProperties = objectWithoutProperties(_eventInit$target, ['value', 'files']);\n    Object.assign(node, targetProperties);\n\n    if (value !== undefined) {\n      setNativeValue(node, value);\n    }\n\n    if (files !== undefined) {\n      // input.files is a read-only property so this is not allowed:\n      // input.files = [file]\n      // so we have to use this workaround to set the property\n      Object.defineProperty(node, 'files', {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: files\n      });\n    }\n\n    var window = node.ownerDocument.defaultView;\n    var EventConstructor = window[EventType] || window.Event;\n    var event = new EventConstructor(eventName, eventInit);\n    return fireEvent(node, event);\n  };\n}); // function written after some investigation here:\n// https://github.com/facebook/react/issues/10135#issuecomment-401496776\n\nfunction setNativeValue(element, value) {\n  var _ref = Object.getOwnPropertyDescriptor(element, 'value') || {},\n      valueSetter = _ref.set;\n\n  var prototype = Object.getPrototypeOf(element);\n\n  var _ref2 = Object.getOwnPropertyDescriptor(prototype, 'value') || {},\n      prototypeValueSetter = _ref2.set;\n\n  if (prototypeValueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  }\n  /* istanbul ignore next (I don't want to bother) */\n  else if (valueSetter) {\n      valueSetter.call(element, value);\n    } else {\n      throw new Error('The given element does not have a value setter');\n    }\n}\n\nObject.keys(eventAliasMap).forEach(function (aliasKey) {\n  var key = eventAliasMap[aliasKey];\n\n  fireEvent[aliasKey] = function () {\n    return fireEvent[key].apply(fireEvent, arguments);\n  };\n});\nexport { getQueriesForElement as bindElementToQueries, getQueriesForElement as within, defaultQueries as queries, queryHelpers, queryByPlaceholderText, queryAllByPlaceholderText, getByPlaceholderText, getAllByPlaceholderText, queryByText, queryAllByText, getByText, getAllByText, queryByLabelText, queryAllByLabelText, getByLabelText, getAllByLabelText, queryByAltText, queryAllByAltText, getByAltText, getAllByAltText, queryBySelectText, queryAllBySelectText, getBySelectText, getAllBySelectText, queryByTestId, queryAllByTestId, getByTestId, getAllByTestId, queryByTitle, queryAllByTitle, getByTitle, getAllByTitle, queryByValue, queryAllByValue, getByValue, getAllByValue, queryByRole, queryAllByRole, getAllByRole, getByRole, wait, waitForElement, waitForDomChange, fuzzyMatches, matches, getNodeText, fireEvent, getQueriesForElement, debugDOM, getElementError, firstResultOrNull, queryAllByAttribute, queryByAttribute, prettyDOM };","map":null,"metadata":{},"sourceType":"module"}